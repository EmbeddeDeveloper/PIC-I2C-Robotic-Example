// basic uart //
#include<pic.h>
void init_uart();
void tx(unsigned char ch);
void rx();
unsigned char ch;
void main()
{
	TRISC=0XC0;	// PORTC data direction register
	init_uart();
 	while(1)
	{
        	rx();
        	tx(ch);
	}   
}
void init_uart()
{
	
	TXSTA=0X24;
	SPBRG=25;	// for baud rate generator register
	RCSTA=0X90;
	//TXIF=1;	

	// for TxSTA register
	//Address Name   Bit 7  Bit 6  Bit 5  Bit 4  Bit 3  Bit 2  Bit 1  Bit 0  Value on:
			 ;						       ; POR, BOR
			 ;						       ;
			 ;						       ;
	//     98h       CSRC   TX9    TXEN   SYNC    —     BRGH   TRMT   TX9D   0000 -010 

	//bit 4 SYNC: USART Mode Select bit
	//1 = Synchronous mode
	//0 = Asynchronous mode

	
// RCSTA register:

//	R/W-0  R/W-0  R/W-0  R/W-0  R/W-0  R-0   R-0   R-x
//	SPEN   RX9    SREN   CREN   ADDEN  FERR  OERR  RX9D
//
//      bit 7                                          bit 0

//	bit 7 SPEN: Serial Port Enable bit
//	1 = Serial port enabled (configures RC7/RX/DT and RC6/TX/CK pins as serial port pins)
//	0 = Serial port disabled


//	bit 4 CREN: Continuous Receive Enable bit
//	Asynchronous mode:
//	1 = Enables continuous receive
//	0 = Disables continuous receive
	
//	Synchronous mode:
//	1 = Enables continuous receive until enable bit CREN is cleared (CREN overrides SREN)
//	0 = Disables continuous receive

}

void tx(unsigned char ch)
{
	TXREG=ch;
	while(TXIF==0);
	TXIF=0;
}
void rx()
{
	while(RCIF==0);
	RCIF=0;
	ch=RCREG;
}