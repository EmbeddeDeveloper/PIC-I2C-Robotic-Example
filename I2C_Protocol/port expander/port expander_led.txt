#include <REG51F.H>
#include<intrins.h>
  
sbit scl=P1^6;
sbit sda=P1^7;

bit flag;

unsigned char i2c_read(void);
void i2c_write(unsigned char a);

void ack_w(void);
void nack_w(void);
void ack_r(void);
void start(void);
void stop(void);
void peread();
void pewrite();

void main(void)
{
	pewrite();
  	while(1) 
  	{
  		peread();
	}
}

void peread()
{
	start();
	i2c_write(0x41);	//read address of port expander
   	P0=i2c_read();
   	nack_w();
   	stop();
}

void pewrite()
{
   start();   
   i2c_write(0x40);   	//write address of port expander
   i2c_write(0x55);   	//55 data will sotre...
   stop();
}

/**********************i2c function start**********************************/
unsigned char i2c_read(void)
{ 
	unsigned char i,store = 0;
  	sda=1;	 //sda in input direction
  	for(i=0;i<8;i++)
  	{
   		scl=1;
   		_nop_();
		_nop_();
		store = store << 1; 
		if(sda)
			store=store|0x01;
		scl=0;
    	_nop_();
		_nop_();
   	}
	return(store);
}

void i2c_write(unsigned char a)
{
	unsigned char b,i;
	scl=0;
	for(i=0;i<8;i++)
	{
		b=a;
	   	b=b&0x80;
		if(b==0x80)
			sda=1;
		else if(b==0x00)
			sda=0;
		a=a<<1;
		_nop_();
		scl=1;
		_nop_();
		_nop_();
		scl=0;
	}		 
	ack_r();	
}

void ack_w(void)
{
	sda=0;		 //sda low give ack
	scl=1;
	_nop_();
	_nop_();
	scl=0;
}

void nack_w(void)
{
	sda=1;				//sda high give nack
	scl=1;
	_nop_();
	_nop_();
	scl=0;
}

void ack_r(void)
{
	sda=1;    //make the sda pin in input direction
	scl=1;
	_nop_();
	_nop_();
	flag=sda;             //if flag=1 nack and if 0 ack properly write
	_nop_();
	_nop_();
	scl=0;
}

void start(void)
{
  	sda=1;
  	scl=1;
	_nop_();
	_nop_();
  	sda=0;
  	_nop_();
  	_nop_();
    scl=0;
}

void stop(void)
{
	sda=0;
  	scl=1;
	_nop_();
	_nop_();
  	sda=1;
  	_nop_();
  	_nop_();
    scl=0;
}
/***************************i2c function stop***********************************/
