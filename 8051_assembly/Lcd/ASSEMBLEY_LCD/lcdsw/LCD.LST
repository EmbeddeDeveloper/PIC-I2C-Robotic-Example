  Wed Mar 12 2008 12:22                                                                                                  Page    1







               2500 A.D. 8051 Macro Assembler  -  Version 4.03c
               ------------------------------------------------

                       Input  Filename : lcd.asm
                       Output Filename : lcd.obj


    1                          	;SW sw.asm
    2                          	;--------------------------------------------------------------------
    3   0000                   		CHIP 8052
    4                          		.list on
    5                          	;--------------------------------------------------------------------
    6                          	;conditional assembly...
    7                          	;Choice of outputs..
    8          0000            	SSD:		EQU	0
    9          0001            	LCD:		EQU	1
   10          0000            	TERMINAL:	EQU	0
   11                          	;choice of inputs..
   12          0001            	HEX_KEYPAD	EQU	1
   13          0000            	PC_KEYBOARD	EQU	0	;SW data\data.equ
   14                          	;-----------------------------------------------------------------
   15                          	;---------------------------------------------------
   16                          	;define byte variable...
   17          0030            	ds1:		EQU	30h
   18          0031            	ds2:		EQU	31h
   19          0032            	ds3:		EQU	32h
   20          0033            	ds4:		EQU	33h
   21          0034            	dcount_1:	EQU	34h
   22          0035            	dcount_2:	EQU	35h
   23          0036            	dcount_3:	EQU	36h
   24          0037            	dcount:		EQU	37h
   25          0038            	count:		EQU	38h
   26          0039            	scan_no:	EQU	39h
   27          003A            	krcount:	EQU	3ah
   28          003B            	key_code:	EQU	3bh
   29          003C            	cnt_1sl:	EQU	3ch
   30          003D            	cnt_1sh:	EQU	3dh
   31          003E            	count16:	EQU	3eh
   32                          	;---------------------------------------------------
   33                          	;define immediate values..
   34          0060            	top_of_stack:	EQU	60h	
   35                          	;---------------------------------------------------
   36                          	
   37                          	;--------------------------------------------------------------------
   38                          	;SW data\data.equ
   39   0000   20 00 12        		jb	s1_over,out_d1sec
        ***** UNDEFINED SYMBOL *****
   40   0003   D5 3C 0F        		djnz	cnt_1sl,out_d1sec
   41   0006   D5 3D 09        		djnz	cnt_1sh,reinit_1sl
   42                          	;count over..
   43   0009   75 3D 04        		mov	cnt_1sh,#04h
   44   000C   75 3C E8        		mov	cnt_1sl,#0e8h
   45   000F   D2 00           		setb	s1_over
        ***** UNDEFINED SYMBOL *****
  Wed Mar 12 2008 12:22                                                                                                  Page    2




   46   0011   22              		ret	
   47   0012                   	reinit_1sl:
   48   0012   75 3C FF        		mov	cnt_1sl,#0ffh
   49   0015                   	out_d1sec:
   50   0015   22              		ret	
   51                          	;--------------------------------------------------------------------
   52                          	
   53                          	
   54                          	;--------------------------------------------------------------------
   55   0016                   	scanner:	
   56                          	;-----------------------------------------------------------------
   57   0016   E5 39           		mov	a,scan_no
   58                          	;--------------------------------------------------------------------
   59                          	
   60                          	
   61                          	;-(0)----------------------------------------------------------------
   62   0018                   	zero:
   63   0018   B4 00 15        		cjne	a,#00d,one		;
   64                          	;----------------------------------------
   65                          	;key_output_line
   66   001B   C2 00           		clr	sl1			;
        ***** UNDEFINED SYMBOL *****
   67   001D   D2 00           		setb	sl2			;
        ***** UNDEFINED SYMBOL *****
   68   001F   D2 00           		setb	sl3			;
        ***** UNDEFINED SYMBOL *****
   69   0021   D2 00           		setb	sl4			;
        ***** UNDEFINED SYMBOL *****
   70                          	;----------------------------------------
   71   0023   12 01 61        		call	adisp1
   72                          	;----------------------------------------
   73   0026   A2 00           		mov	c,krl1
        ***** UNDEFINED SYMBOL *****
   74   0028   12 01 21        		call	k
   75                          	;----------------------------------------
   76   002B   75 39 01        		mov	scan_no,#01d
   77   002E   21 20           		ajmp	out_scanner
   78                          	;--------------------------------------------------------------------
   79                          	
   80                          	
   81                          	;-(1)----------------------------------------------------------------
   82   0030                   	one:
   83   0030   B4 01 0A        		cjne	a,#01d,two		;
   84                          	;----------------------------------------
   85                          	
   86                          	;----------------------------------------
   87   0033   A2 00           		mov	c,krl2
        ***** UNDEFINED SYMBOL *****
   88   0035   12 01 21        		call	k
   89                          	;----------------------------------------
   90   0038   75 39 02        		mov	scan_no,#02d	
   91   003B   21 20           		ajmp	out_scanner
   92                          	;--------------------------------------------------------------------
   93                          	
   94                          	
   95                          	;-(2)----------------------------------------------------------------
   96   003D                   	two:
  Wed Mar 12 2008 12:22                                                                                                  Page    3




   97   003D   B4 02 0A        		cjne	a,#02d,three		;
   98                          	;----------------------------------------
   99                          	
  100                          	;----------------------------------------
  101   0040   A2 00           		mov	c,krl3
        ***** UNDEFINED SYMBOL *****
  102   0042   12 01 21        		call	k
  103                          	;----------------------------------------
  104   0045   75 39 03        		mov	scan_no,#03d
  105   0048   21 20           		ajmp	out_scanner
  106                          	;--------------------------------------------------------------------
  107                          	
  108                          	
  109                          	
  110                          	;-(3)----------------------------------------------------------------
  111   004A                   	three:
  112   004A   B4 03 0D        		cjne	a,#03d,four		;
  113                          	;----------------------------------------
  114   004D   12 01 65        		call	disp_blank
  115                          	;----------------------------------------
  116   0050   A2 00           		mov	c,krl4
        ***** UNDEFINED SYMBOL *****
  117   0052   12 01 21        		call	k
  118                          	;----------------------------------------
  119   0055   75 39 04        		mov	scan_no,#04d
  120   0058   21 20           		ajmp	out_scanner
  121                          	;--------------------------------------------------------------------
  122                          	
  123                          	
  124                          	
  125                          	;-(4)----------------------------------------------------------------
  126   005A                   	four:
  127   005A   B4 04 15        		cjne	a,#04d,five		;
  128                          	;----------------------------------------
  129                          	;key_output_line
  130   005D   D2 00           		setb	sl1			;
        ***** UNDEFINED SYMBOL *****
  131   005F   C2 00           		clr	sl2			;
        ***** UNDEFINED SYMBOL *****
  132   0061   D2 00           		setb	sl3			;
        ***** UNDEFINED SYMBOL *****
  133   0063   D2 00           		setb	sl4			;
        ***** UNDEFINED SYMBOL *****
  134                          	;----------------------------------------
  135   0065   12 01 62        		call	adisp2
  136                          	;----------------------------------------
  137   0068   A2 00           		mov	c,krl1
        ***** UNDEFINED SYMBOL *****
  138   006A   12 01 21        		call	k
  139                          	;----------------------------------------
  140   006D   75 39 05        		mov	scan_no,#05d
  141   0070   21 20           		ajmp	out_scanner
  142                          	;--------------------------------------------------------------------
  143                          	
  144                          	
  145                          	
  146                          	;-(5)----------------------------------------------------------------
  Wed Mar 12 2008 12:22                                                                                                  Page    4




  147   0072                   	five:
  148   0072   B4 05 0A        		cjne	a,#05d,six		;
  149                          	;----------------------------------------
  150                          	
  151                          	;----------------------------------------
  152   0075   A2 00           		mov	c,krl2
        ***** UNDEFINED SYMBOL *****
  153   0077   12 01 21        		call	k
  154                          	;----------------------------------------
  155   007A   75 39 06        		mov	scan_no,#06d
  156   007D   21 20           		ajmp	out_scanner
  157                          	;--------------------------------------------------------------------
  158                          	
  159                          	
  160                          	
  161                          	;-(6)----------------------------------------------------------------
  162   007F                   	six:
  163   007F   B4 06 0A        		cjne	a,#06d,seven		;
  164                          	;----------------------------------------
  165                          	
  166                          	;----------------------------------------
  167   0082   A2 00           		mov	c,krl3
        ***** UNDEFINED SYMBOL *****
  168   0084   12 01 21        		call	k
  169                          	;----------------------------------------
  170   0087   75 39 07        		mov	scan_no,#07d
  171   008A   21 20           		ajmp	out_scanner
  172                          	;--------------------------------------------------------------------
  173                          	
  174                          	
  175                          	
  176                          	;-(7)----------------------------------------------------------------
  177   008C                   	seven:
  178   008C   B4 07 0D        		cjne	a,#07d,eight		;
  179                          	;----------------------------------------
  180   008F   12 01 65        		call	disp_blank
  181                          	;----------------------------------------
  182   0092   A2 00           		mov	c,krl4
        ***** UNDEFINED SYMBOL *****
  183   0094   12 01 21        		call	k
  184                          	;----------------------------------------
  185   0097   75 39 08        		mov	scan_no,#08d
  186   009A   21 20           		ajmp	out_scanner
  187                          	;--------------------------------------------------------------------
  188                          	
  189                          	
  190                          	
  191                          	;-(8)----------------------------------------------------------------
  192   009C                   	eight:
  193   009C   B4 08 15        		cjne	a,#08d,nine		;
  194                          	;----------------------------------------
  195                          	;key_output_line
  196   009F   D2 00           		setb	sl1			;
        ***** UNDEFINED SYMBOL *****
  197   00A1   D2 00           		setb	sl2			;
        ***** UNDEFINED SYMBOL *****
  198   00A3   C2 00           		clr	sl3			;
        ***** UNDEFINED SYMBOL *****
  Wed Mar 12 2008 12:22                                                                                                  Page    5




  199   00A5   D2 00           		setb	sl4			;
        ***** UNDEFINED SYMBOL *****
  200                          	;----------------------------------------
  201   00A7   12 01 63        		call	adisp3
  202                          	;----------------------------------------
  203   00AA   A2 00           		mov	c,krl1
        ***** UNDEFINED SYMBOL *****
  204   00AC   12 01 21        		call	k
  205                          	;----------------------------------------
  206   00AF   75 39 09        		mov	scan_no,#09d
  207   00B2   21 20           		ajmp	out_scanner
  208                          	;--------------------------------------------------------------------
  209                          	
  210                          	
  211                          	;-(9)----------------------------------------------------------------
  212   00B4                   	nine:
  213   00B4   B4 09 0A        		cjne	a,#09d,ten		;
  214                          	;----------------------------------------
  215                          	
  216                          	;----------------------------------------
  217   00B7   A2 00           		mov	c,krl2
        ***** UNDEFINED SYMBOL *****
  218   00B9   12 01 21        		call	k
  219                          	;----------------------------------------
  220   00BC   75 39 0A        		mov	scan_no,#10d
  221   00BF   21 20           		ajmp	out_scanner
  222                          	;--------------------------------------------------------------------
  223                          	
  224                          	;-(10(a))------------------------------------------------------------
  225   00C1                   	ten:
  226   00C1   B4 0A 0A        		cjne	a,#10d,eleven		;
  227                          	;----------------------------------------
  228                          	
  229                          	;----------------------------------------
  230   00C4   A2 00           		mov	c,krl3
        ***** UNDEFINED SYMBOL *****
  231   00C6   12 01 21        		call	k
  232                          	;----------------------------------------
  233   00C9   75 39 0B        		mov	scan_no,#11d
  234   00CC   21 20           		ajmp	out_scanner
  235                          	;--------------------------------------------------------------------
  236                          	
  237                          	
  238                          	;-(11(b))------------------------------------------------------------
  239   00CE                   	eleven:
  240   00CE   B4 0B 0D        		cjne	a,#11d,twelve		;
  241                          	;----------------------------------------
  242   00D1   12 01 65        		call	disp_blank
  243                          	;----------------------------------------
  244   00D4   A2 00           		mov	c,krl4
        ***** UNDEFINED SYMBOL *****
  245   00D6   12 01 21        		call	k
  246                          	;----------------------------------------
  247   00D9   75 39 0C        		mov	scan_no,#12d
  248   00DC   21 20           		ajmp	out_scanner
  249                          	;--------------------------------------------------------------------
  250                          	
  Wed Mar 12 2008 12:22                                                                                                  Page    6




  251                          	
  252                          	;-(12(c))------------------------------------------------------------
  253   00DE                   	twelve:
  254   00DE   B4 0C 15        		cjne	a,#12d,thirteen		;
  255                          	;----------------------------------------
  256                          	;key_output_line
  257   00E1   D2 00           		setb	sl1			;
        ***** UNDEFINED SYMBOL *****
  258   00E3   D2 00           		setb	sl2			;
        ***** UNDEFINED SYMBOL *****
  259   00E5   D2 00           		setb	sl3			;
        ***** UNDEFINED SYMBOL *****
  260   00E7   C2 00           		clr	sl4			;
        ***** UNDEFINED SYMBOL *****
  261                          	;----------------------------------------
  262   00E9   12 01 64        		call	adisp4
  263                          	;----------------------------------------
  264   00EC   A2 00           		mov	c,krl1
        ***** UNDEFINED SYMBOL *****
  265   00EE   12 01 21        		call	k
  266                          	;----------------------------------------
  267   00F1   75 39 0D        		mov	scan_no,#13d
  268   00F4   21 20           		ajmp	out_scanner
  269                          	;--------------------------------------------------------------------
  270                          	
  271                          	;-(13(d))------------------------------------------------------------
  272   00F6                   	thirteen:
  273   00F6   B4 0D 0A        		cjne	a,#13d,fourteen		;
  274                          	;----------------------------------------
  275                          	
  276                          	;----------------------------------------
  277   00F9   A2 00           		mov	c,krl2
        ***** UNDEFINED SYMBOL *****
  278   00FB   12 01 21        		call	k
  279                          	;----------------------------------------
  280   00FE   75 39 0E        		mov	scan_no,#14d
  281   0101   21 20           		ajmp	out_scanner
  282                          	;--------------------------------------------------------------------
  283                          	
  284                          	;-(14(e))------------------------------------------------------------
  285   0103                   	fourteen:
  286   0103   B4 0E 0A        		cjne	a,#14d,fifteen		;
  287                          	;----------------------------------------
  288                          	
  289                          	;----------------------------------------
  290   0106   A2 00           		mov	c,krl3
        ***** UNDEFINED SYMBOL *****
  291   0108   12 01 21        		call	k
  292                          	;----------------------------------------
  293   010B   75 39 0F        		mov	scan_no,#15d
  294   010E   21 20           		ajmp	out_scanner
  295                          	;--------------------------------------------------------------------
  296                          	
  297                          	;-(15(f))------------------------------------------------------------
  298   0110                   	fifteen:
  299   0110   B4 0F 08        		cjne	a,#15d,dummy		;
  300                          	;----------------------------------------
  Wed Mar 12 2008 12:22                                                                                                  Page    7




  301   0113   12 01 65        		call	disp_blank
  302                          	;----------------------------------------
  303   0116   A2 00           		mov	c,krl4
        ***** UNDEFINED SYMBOL *****
  304   0118   12 01 21        		call	k
  305                          	;----------------------------------------
  306   011B   75 39 00        	dummy:	mov	scan_no,#00d
  307   011E   21 20           		ajmp	out_scanner
  308                          	;--------------------------------------------------------------------
  309                          	
  310                          	
  311                          	;--------------------------------------------------------------------
  312   0120                   	out_scanner:
  313                          	;	
  314   0120   22              		ret
  315                          	;-----------------------------------------------------------------------
  316                          	
  317                          	
  318                          	;-------------------------------------------------
  319                          	;comes with c flag having the status of the corrosponding krl line.
  320   0121                   	k:
  321   0121   20 00 2A        		jb	key_ready,out_debounce
        ***** UNDEFINED SYMBOL *****
  322                          	;-------------------------------------
  323                          	;key detect....
  324   0124   92 00           		mov	tb,c			;save carry bit
        ***** UNDEFINED SYMBOL *****
  325   0126   E5 37           		mov	a,dcount
  326   0128   B4 21 0C        		cjne	a,#33d,debounce
  327   012B   A2 00           		mov	c,tb			;restore carry bit
        ***** UNDEFINED SYMBOL *****
  328                          	;key pressed for the first time...
  329   012D   40 31           		jc	out_k
  330   012F   15 37           		dec	dcount
  331   0131   85 39 3B        		mov	key_code,scan_no	;copy the scan_no in key_code
  332   0134   02 01 60        		jmp	out_k
  333                          	;-------------------------------------	
  334   0137                   	debounce:
  335   0137   D5 37 26        		djnz	dcount,out_k
  336                          	;debounce complete..now check for key press...
  337   013A   A2 00           		mov	c,tb			;restore carry bit
        ***** UNDEFINED SYMBOL *****
  338   013C   40 0A           		jc	spurious_key
  339   013E   75 37 21        		mov	dcount,#33d
  340   0141   D2 00           		setb	key_ready		;key still pressed (after debounce)
        ***** UNDEFINED SYMBOL *****
  341   0143   D2 00           		setb	start_buzzer		;buzzer on
        ***** UNDEFINED SYMBOL *****
  342   0145   02 01 60        		jmp	out_k
  343   0148                   	spurious_key:
  344   0148   75 37 21        		mov	dcount,#33d
  345   014B   02 01 60        		jmp	out_k
  346   014E                   	out_debounce:
  347                          	;-------------------------------------
  348                          	;check for key release...
  349   014E   40 06           		jc	l1_k
  350   0150   75 3A 20        		mov	krcount,#32d
  Wed Mar 12 2008 12:22                                                                                                  Page    8




  351   0153   02 01 60        		jmp	out_k
  352   0156                   	l1_k:
  353   0156   D5 3A 07        		djnz	krcount,out_k
  354   0159   D2 00           		setb	nkp
        ***** UNDEFINED SYMBOL *****
  355   015B   C2 00           		clr	start_buzzer		;buzzer off
        ***** UNDEFINED SYMBOL *****
  356   015D   75 3A 20        		mov	krcount,#32d
  357                          	;	jmp	out_k
  358                          	;-------------------------------------
  359   0160                   	out_k:
  360   0160   22              		ret		
  361                          	;-----------------------------------------------
  362                          	
  363                          	
  364                          	;------------------------------------------
  365   0161                   	adisp1:
  366          [01]            		IF	SSD
  367                          		mov 	dptr,#adisp_lut
  368                          		mov 	a,ds1
  369                          		clr	c
  370                          		subb	a,#"0"
  371                          		movc 	a,@a+dptr
  372                          		mov 	p0,a
  373          [00]            		ENDIF
  374   0161   22              		ret
  375                          	;------------------------------------------
  376                          	
  377                          	
  378                          	;------------------------------------------
  379   0162                   	adisp2:
  380          [01]            		IF	SSD
  381                          		mov 	dptr,#adisp_lut
  382                          		mov 	a,ds2
  383                          		clr	c
  384                          		subb	a,#"0"
  385                          		movc 	a,@a+dptr
  386                          		mov 	p0,a
  387          [00]            		ENDIF
  388   0162   22              		ret
  389                          	;------------------------------------------
  390                          	
  391                          	;------------------------------------------
  392   0163                   	adisp3:
  393          [01]            		IF	SSD
  394                          		mov 	dptr,#adisp_lut
  395                          		mov 	a,ds3
  396                          		clr	c
  397                          		subb	a,#"0"
  398                          		movc 	a,@a+dptr
  399                          		mov 	p0,a
  400          [00]            		ENDIF
  401   0163   22              		ret
  402                          	;------------------------------------------
  403                          	
  404                          	;------------------------------------------
  405   0164                   	adisp4:
  Wed Mar 12 2008 12:22                                                                                                  Page    9




  406          [01]            		IF	SSD
  407                          		mov 	dptr,#adisp_lut
  408                          		mov 	a,ds4
  409                          		clr	c
  410                          		subb	a,#"0"
  411                          		movc 	a,@a+dptr
  412                          		mov 	p0,a
  413          [00]            		ENDIF
  414   0164   22              		ret
  415                          	;------------------------------------------
  416                          	
  417                          	;------------------------------------------
  418   0165                   	disp_blank:
  419          [01]            		IF	SSD
  420                          		mov 	p0,#00h
  421          [00]            		ENDIF
  422   0165   22              		ret
  423                          	;------------------------------------------
  424                          	
  425                          	;-----------------------------------------------
  426   0166                   	adisp_lut:
  427                          	;		-abcdefgd-		
  428   0166   FC              		db	 11111100b	;0
  429   0167   60              		db	 01100000b	;1
  430   0168   DA              		db	 11011010b	;2
  431   0169   F2              		db	 11110010b	;3
  432   016A   66              		db	 01100110b	;4
  433   016B   B6              		db	 10110110b	;5
  434   016C   BE              		db	 10111110b	;6
  435   016D   E0              		db	 11100000b	;7
  436   016E   FE              		db	 11111110b	;8
  437   016F   E6              		db	 11100110b	;9
  438                          	;
  439   0170   FF              		db	 11111111b	;3a
  440   0171   FF              		db	 11111111b	;3b
  441   0172   FF              		db	 11111111b	;3c
  442   0173   FF              		db	 11111111b	;3d
  443   0174   FF              		db	 11111111b	;3e
  444   0175   FF              		db	 11111111b	;3f
  445   0176   FF              		db	 11111111b	;40
  446                          	;
  447   0177   EE              		db	 11101110b	;A
  448   0178   3E              		db	 00111110b	;B
  449   0179   9C              		db	 10011100b	;C
  450   017A   7A              		db	 01111010b	;D
  451   017B   9E              		db	 10011110b	;E
  452   017C   8E              		db	 10001110b	;F
  453   017D   BC              		db	 10111100b	;G
  454   017E   6E              		db	 01101110b	;H
  455   017F   0C              		db	 00001100b	;I
  456   0180   70              		db	 01110000b	;J
  457   0181   0E              		db	 00001110b	;K
  458   0182   1C              		db	 00011100b	;L
  459   0183   AA              		db	 10101010b	;M
  460   0184   2A              		db	 00101010b	;N
  461   0185   3A              		db	 00111010b	;O
  462   0186   CE              		db	 11001110b	;P
  Wed Mar 12 2008 12:22                                                                                                  Page   10




  463   0187   D6              		db	 11010110b	;Q
  464   0188   0A              		db	 00001010b	;R
  465   0189   B6              		db	 10110110b	;S
  466   018A   1E              		db	 00011110b	;T
  467   018B   7C              		db	 01111100b	;U
  468   018C   38              		db	 00111000b	;V
  469   018D   B8              		db	 10111000b	;W
  470   018E   62              		db	 01100010b	;X
  471   018F   66              		db	 01100110b	;Y
  472   0190   92              		db	 10010010b	;Z
  473   0191   00              		db	 00000000b	;Z+1 for space
  474   0192   FF              		db	 11111111b	;Z+2 for all segment glow
  475                          	;-----------------------------------------------------------------------
  476                          	;--------------------------------------------------------------------
  477                          	;wait_5ms
  478                          	;wait_20ms
  479                          	;wait_1sec
  480                          	;--------------------------------------------------------------------
  481                          	
  482                          	
  483                          	
  484                          	;-----------------------------------------------
  485   0193                   	wait_5ms:
  486   0193   75 35 15        		mov	dcount_2,#21d
  487   0196   75 34 FF        		mov	dcount_1,#0ffh		;$-3-3
  488   0199   D5 34 FD        		djnz	dcount_1,$		;$-3
  489   019C   D5 35 F7        		djnz	dcount_2,$-3-3
  490   019F   22              		ret
  491                          	;-----------------------------------------------
  492                          	
  493                          	
  494                          	;-----------------------------------------------
  495   01A0                   	wait_20ms:
  496   01A0   75 35 55        		mov	dcount_2,#55h
  497   01A3   75 34 FF        		mov	dcount_1,#0ffh		;$-3-3
  498   01A6   D5 34 FD        		djnz	dcount_1,$		;$-3
  499   01A9   D5 35 F7        		djnz	dcount_2,$-3-3
  500   01AC   22              		ret
  501                          	;-----------------------------------------------
  502                          	
  503                          	
  504                          	;----------------------------------------------- 
  505   01AD                   	wait_1sec:
  506   01AD   75 36 07        		mov	dcount_3,#07d
  507   01B0   75 35 FF        	l2:	mov 	dcount_2,#0ffh
  508   01B3   75 34 FF        	l1:	mov 	dcount_1,#0ffh
  509   01B6   D5 34 FD        		djnz 	dcount_1,$
  510   01B9   D5 35 F7        		djnz 	dcount_2,l1
  511   01BC   D5 36 F1        		djnz 	dcount_3,l2
  512   01BF   22              		ret
  513                          	;-----------------------------------------------
  514                          	;-----------------------------------------------
  515   01C0                   	test_display:
  516   01C0   75 30 5C        		mov	ds1,#"Z"+2	;glow all segments
  517   01C3   75 31 5C        		mov	ds2,#"Z"+2
  518   01C6   75 32 5C        		mov	ds3,#"Z"+2
  519   01C9   75 33 5C        		mov	ds4,#"Z"+2
  Wed Mar 12 2008 12:22                                                                                                  Page   11




  520                          	;
  521   01CC   31 AD           		call	wait_1sec
  522                          	;
  523   01CE   75 30 5B        		mov	ds1,#"Z"+1	;put off all segments
  524   01D1   75 31 5B        		mov	ds2,#"Z"+1
  525   01D4   75 32 5B        		mov	ds3,#"Z"+1
  526   01D7   75 33 5B        		mov	ds4,#"Z"+1
  527                          	;
  528   01DA   31 AD           		call	wait_1sec
  529                          	;
  530   01DC   22              		ret
  531                          	;-----------------------------------------------
  532   01DD                   	buzzer:
  533   01DD   30 00 02        		jnb	start_buzzer,out_b
        ***** UNDEFINED SYMBOL *****
  534   01E0                   		
  535   01E0   B2 95           		cpl	p1.5
  536   01E2                   		
  537   01E2                   	out_b:
  538   01E2   22              		ret	
  539                          	;-----------------------------------------------
  540   01E3                   	inc_d:
  541   01E3   05 30           		inc 	ds1
  542   01E5   E5 30           		mov 	a,ds1
  543   01E7   B4 3A 00        		cjne 	a,#"9"+1,$+3
  544   01EA   50 01           		jnc 	l1_id 
  545   01EC   22              		ret
  546                          	;
  547   01ED   75 30 30        	l1_id:	mov 	ds1,#"0"
  548   01F0   05 31           		inc 	ds2
  549   01F2   E5 31           		mov 	a,ds2
  550   01F4   B4 3A 00        		cjne 	a,#"9"+1,$+3
  551   01F7   50 01           		jnc 	l2_id
  552   01F9   22              		ret
  553                          	;
  554   01FA   75 31 30        	l2_id:	mov 	ds2,#"0"
  555   01FD   05 32           		inc 	ds3
  556   01FF   E5 32           		mov 	a,ds3
  557   0201   B4 3A 00        		cjne 	a,#"9"+1,$+3 
  558   0204   50 01           		jnc 	l3_id
  559   0206   22              		ret
  560                          	;
  561   0207   75 32 30        	l3_id:	mov 	ds3,#"0"
  562   020A   05 33           		inc 	ds4 
  563   020C   E5 33           		mov 	a,ds4
  564   020E   B4 3A 0C        		cjne 	a,#"9"+1,out_id
  565                          	;
  566   0211   75 30 30        		mov	ds1,#"0"
  567   0214   75 31 30        		mov	ds2,#"0"
  568   0217   75 32 30        		mov	ds3,#"0"
  569   021A   75 33 30        		mov	ds4,#"0"
  570                          	;
  571   021D                   	out_id:
  572   021D   22              		ret
  573                          	;-------------------------------------------------
  574                          	;-------------------------------------------------
  575   021E                   	keyprocess:
  Wed Mar 12 2008 12:22                                                                                                  Page   12




  576   021E   E5 3B           		mov	a,key_code
  577                          	;
  578   0220   B4 41 06        		cjne	a,#"A",chk_b
  579                          	;---------------------------
  580   0223   12 02 66        		call	process_a
  581   0226   02 02 3B        		jmp	out_kp
  582                          	;---------------------------
  583   0229   B4 42 06        	chk_b:	cjne	a,#"B",chk_c
  584                          	;---------------------------
  585   022C   12 02 7D        		call	process_b
  586   022F   02 02 3B        		jmp	out_kp
  587                          	;---------------------------
  588   0232   B4 43 06        	chk_c:	cjne	a,#"C",out_kp
  589                          	;---------------------------
  590   0235   12 02 83        		call	process_c
  591   0238   02 02 3B        		jmp	out_kp
  592                          	;---------------------------
  593   023B                   	out_kp:
  594   023B   12 02 3F        		call	key_release
  595   023E   22              		ret
  596                          	;-------------------------------------------------
  597                          	
  598                          	
  599                          	
  600                          	
  601                          	;---------------------------------------------------------------------
  602   023F                   	key_release:
  603                          	;-------------------------------------------------
  604          [01]            		IF	HEX_KEYPAD
  605   023F   30 00 FD        		jnb	nkp,$	;wait for no key press flag
        ***** UNDEFINED SYMBOL *****
  606   0242   C2 00           		clr	key_ready
        ***** UNDEFINED SYMBOL *****
  607   0244   C2 00           		clr	nkp
        ***** UNDEFINED SYMBOL *****
  608   0246   22              		ret
  609          [00]            		ENDIF
  610                          	;-------------------------------------------------
  611                          	;-------------------------------------------------
  612          [01]            		IF	PC_KEYBOARD
  613                          		ret
  614          [00]            		ENDIF
  615                          	;-------------------------------------------------	
  616                          	;---------------------------------------------------------------------
  617                          	
  618                          	
  619                          	
  620                          	
  621                          	;---------------------------------------------------------------------
  622                          	;gets ascii code for key pressed in "a" and key_code.
  623   0247                   	get_key:
  624                          	;-------------------------------------------------
  625          [01]            		IF	HEX_KEYPAD
  626   0247   30 00 FD        		jnb	key_ready,$
        ***** UNDEFINED SYMBOL *****
  627   024A   E5 3B           		mov	a,key_code
  628   024C   90 02 53        		mov	dptr,#ascii_key
  Wed Mar 12 2008 12:22                                                                                                  Page   13




  629   024F   93              		movc	a,@a+dptr
  630   0250   F5 3B           		mov	key_code,a
  631   0252   22              		ret
  632   0253   30 31 32 33 34  	ascii_key:	db	"0123456789ABCDEF"
        0258   35 36 37 38 39 
        025D   41 42 43 44 45 
        0262   46 
  633          [00]            		ENDIF
  634                          	;-------------------------------------------------
  635                          	;-------------------------------------------------
  636          [01]            		IF	PC_KEYBOARD
  637                          		call	rx
  638                          		mov	key_code,a
  639                          		ret
  640          [00]            		ENDIF
  641                          	;-------------------------------------------------
  642                          	;---------------------------------------------------------------------	
  643                          	
  644                          	
  645                          	
  646                          	
  647                          	;---------------------------------------------------------------------
  648                          	;gets ascii code for key pressed in "a" and key_code.
  649   0263                   	get_key_status:
  650                          	;-------------------------------------------------
  651          [01]            		IF	HEX_KEYPAD	
  652   0263   A2 00           		mov	c,key_ready
        ***** UNDEFINED SYMBOL *****
  653   0265   22              		ret
  654          [00]            		ENDIF
  655                          	;-------------------------------------------------
  656                          	;-------------------------------------------------
  657          [01]            		IF	PC_KEYBOARD
  658                          		mov	c,ri
  659                          		ret
  660          [00]            		ENDIF
  661                          	;-------------------------------------------------
  662                          	;---------------------------------------------------------------------
  663                          	;-------------------------------------------------
  664   0266                   	process_a:
  665   0266   30 00 0E        		jnb	first_time,l1_pa
        ***** UNDEFINED SYMBOL *****
  666   0269   C2 00           		clr	first_time
        ***** UNDEFINED SYMBOL *****
  667   026B   75 30 30        		mov	ds1,#"0"
  668   026E   75 31 30        		mov	ds2,#"0"
  669   0271   75 32 30        		mov	ds3,#"0"
  670   0274   75 33 30        		mov	ds4,#"0"
  671   0277                   	l1_pa:
  672   0277   D2 00           		setb	start_sw
        ***** UNDEFINED SYMBOL *****
  673   0279   12 02 C0        		call	disp_sw_started
  674   027C   22              		ret
  675                          	;-------------------------------------------------
  676                          	
  677                          	
  678                          	
  Wed Mar 12 2008 12:22                                                                                                  Page   14




  679                          	
  680                          	;-------------------------------------------------
  681   027D                   	process_b:
  682   027D   C2 00           		clr	start_sw
        ***** UNDEFINED SYMBOL *****
  683   027F   12 02 F8        		call	disp_sw_stopped
  684   0282   22              		ret
  685                          	;-------------------------------------------------
  686                          	
  687                          	
  688                          	
  689                          	
  690                          	;-------------------------------------------------
  691   0283                   	process_c:
  692   0283   C2 00           		clr	start_sw
        ***** UNDEFINED SYMBOL *****
  693                          	;
  694   0285   75 30 30        		mov	ds1,#"0"		;reset count to 0000
  695   0288   75 31 30        		mov	ds2,#"0"
  696   028B   75 32 30        		mov	ds3,#"0"
  697   028E   75 33 30        		mov	ds4,#"0"
  698                          	;
  699   0291   12 03 30        		call	disp_sw_resetted
  700   0294   22              		ret
  701                          	;-------------------------------------------------
  702   0295                   	disp_sw:
  703                          	;----------------------------------------------
  704          [01]            		IF	SSD
  705                          		mov	ds1,#"Z"+1
  706                          		mov	ds2,#"Z"+1
  707                          		mov	ds3,#"W"
  708                          		mov	ds4,#"S"
  709                          		ret
  710          [00]            		ENDIF
  711                          	;----------------------------------------------
  712                          	;----------------------------------------------
  713          [01]            		IF	LCD
  714   0295   12 03 CB        		call 	clear_display
  715   0298   90 02 9F        		mov	dptr,#m_sw
  716   029B   12 04 43        		call	wr_lcd_message16
  717   029E   22              		ret
  718                          	;		-1234567890123456-
  719   029F   20 57 45 4C 43  	m_sw:	db	" WELCOME TO THE "
        02A4   4F 4D 45 20 54 
        02A9   4F 20 54 48 45 
        02AE   20 
  720   02AF   20 53 54 4F 50  		db	" STOP WATCH PROG",#03h
        02B4   20 57 41 54 43 
        02B9   48 20 50 52 4F 
        02BE   47 03 
  721          [00]            		ENDIF
  722                          	;----------------------------------------------
  723                          	;----------------------------------------------
  724          [01]            		IF	TERMINAL
  725                          		mov	dptr,#m_sw
  726                          		call	send_m
  727                          		ret
  Wed Mar 12 2008 12:22                                                                                                  Page   15




  728                          	
  729                          	m_sw:
  730                          	;		-0        1         2         3         4	
  731                          	;		-1234567890123456789012345678901234567890-
  732                          		db	"WELCOME TO THE STOPWATCH PROGRAM",#0Ah,#0Dh
  733                          		db	"Press A key to start the Stopwatch",#0Ah,#0Dh
  734                          		db	"Press B key to stop  the Stopwatch",#0Ah,#0Dh
  735                          		db	"Press C key to reset the Stopwatch",#0Ah,#0Dh,#03h
  736          [00]            		ENDIF
  737                          	;----------------------------------------------
  738                          	;--------------------------------------------------------------------
  739                          	
  740                          	
  741                          	
  742                          	
  743                          	;--------------------------------------------------------------------
  744   02C0                   	disp_sw_started:
  745                          	;----------------------------------------------
  746          [01]            		IF	SSD
  747                          		ret
  748          [00]            		ENDIF
  749                          	;----------------------------------------------
  750                          	;----------------------------------------------
  751          [01]            		IF	LCD
  752   02C0   12 03 CB        		call 	clear_display
  753   02C3   90 02 DE        		mov	dptr,#m_swstrt
  754   02C6   12 04 43        		call	wr_lcd_message16
  755                          	;
  756   02C9   E5 33           		mov	a,ds4
  757   02CB   12 03 F3        		call	wr_lcd_dw
  758                          	;
  759                          	;
  760   02CE   E5 32           		mov	a,ds3
  761   02D0   12 03 F3        		call	wr_lcd_dw
  762                          	;
  763                          	;
  764   02D3   E5 31           		mov	a,ds2
  765   02D5   12 03 F3        		call	wr_lcd_dw
  766                          	;
  767                          	;
  768   02D8   E5 30           		mov	a,ds1
  769   02DA   12 03 F3        		call	wr_lcd_dw
  770                          	;
  771   02DD   22              		ret
  772                          	
  773   02DE                   	m_swstrt:
  774                          	;		-1234567890123456-
  775   02DE   20 20 20 20 53  		db	"    STOPWATCH   "
        02E3   54 4F 50 57 41 
        02E8   54 43 48 20 20 
        02ED   20 
  776   02EE   20 53 54 41 52  		db	" STARTED ",#03h
        02F3   54 45 44 20 03 
  777          [00]            		ENDIF
  778                          	;----------------------------------------------
  779                          	;----------------------------------------------
  780          [01]            		IF	TERMINAL
  Wed Mar 12 2008 12:22                                                                                                  Page   16




  781                          		mov	a,#0Dh
  782                          		call	tx
  783                          		mov	dptr,#m_swstrt
  784                          		call	send_m
  785                          		ret
  786                          	
  787                          	m_swstrt:
  788                          	;		-0        1         2         3         4	
  789                          	;		-1234567890123456789012345678901234567890-
  790                          		db	"STOPWATCH STARTED-->  ",#03h
  791          [00]            		ENDIF
  792                          	;----------------------------------------------
  793                          	;--------------------------------------------------------------------
  794                          	
  795                          	
  796                          	
  797                          	
  798                          	;--------------------------------------------------------------------
  799   02F8                   	disp_sw_stopped:
  800                          	;----------------------------------------------
  801          [01]            		IF	SSD
  802                          		ret
  803          [00]            		ENDIF
  804                          	;----------------------------------------------
  805                          	;----------------------------------------------
  806          [01]            		IF	LCD
  807   02F8   12 03 CB        		call 	clear_display
  808   02FB   90 03 16        		mov	dptr,#m_swstp
  809   02FE   12 04 43        		call	wr_lcd_message16
  810                          	;
  811   0301   E5 33           		mov	a,ds4
  812   0303   12 03 F3        		call	wr_lcd_dw
  813                          	;
  814                          	;
  815   0306   E5 32           		mov	a,ds3
  816   0308   12 03 F3        		call	wr_lcd_dw
  817                          	;
  818                          	;
  819   030B   E5 31           		mov	a,ds2
  820   030D   12 03 F3        		call	wr_lcd_dw
  821                          	;
  822                          	;
  823   0310   E5 30           		mov	a,ds1
  824   0312   12 03 F3        		call	wr_lcd_dw
  825                          	;
  826   0315   22              		ret
  827                          	
  828   0316                   	m_swstp:
  829                          	;		-1234567890123456-
  830   0316   20 20 20 20 53  		db	"    STOPWATCH   "
        031B   54 4F 50 57 41 
        0320   54 43 48 20 20 
        0325   20 
  831   0326   20 53 54 4F 50  		db	" STOPPED ",#03h
        032B   50 45 44 20 03 
  832          [00]            		ENDIF
  833                          	;----------------------------------------------
  Wed Mar 12 2008 12:22                                                                                                  Page   17




  834                          	;----------------------------------------------
  835          [01]            		IF	TERMINAL
  836                          		mov	a,#0Dh
  837                          		call	tx
  838                          		mov	dptr,#m_swstp
  839                          		call	send_m
  840                          		ret
  841                          	
  842                          	m_swstp:
  843                          	;		-0        1         2         3         4	
  844                          	;		-1234567890123456789012345678901234567890-
  845                          		db	"STOPWATCH STOPPED-->  ",#03h
  846          [00]            		ENDIF
  847                          	;----------------------------------------------
  848                          	;-------------------------------------------------------------------
  849                          	
  850                          	
  851                          	
  852                          	
  853                          	;--------------------------------------------------------------------
  854   0330                   	disp_sw_resetted:
  855                          	;----------------------------------------------
  856          [01]            		IF	SSD
  857                          		ret
  858          [00]            		ENDIF
  859                          	;----------------------------------------------
  860                          	;----------------------------------------------
  861          [01]            		IF	LCD
  862   0330   12 03 CB        		call 	clear_display
  863   0333   90 03 4E        		mov	dptr,#m_swrst
  864   0336   12 04 43        		call	wr_lcd_message16
  865                          	;
  866   0339   E5 33           		mov	a,ds4
  867   033B   12 03 F3        		call	wr_lcd_dw
  868                          	;
  869                          	;
  870   033E   E5 32           		mov	a,ds3
  871   0340   12 03 F3        		call	wr_lcd_dw
  872                          	;
  873                          	;
  874   0343   E5 31           		mov	a,ds2
  875   0345   12 03 F3        		call	wr_lcd_dw
  876                          	;
  877                          	;
  878   0348   E5 30           		mov	a,ds1
  879   034A   12 03 F3        		call	wr_lcd_dw
  880                          	;
  881   034D   22              		ret
  882                          	
  883   034E                   	m_swrst:
  884                          	;		-1234567890123456-
  885   034E   20 20 20 20 53  		db	"    STOPWATCH   "
        0353   54 4F 50 57 41 
        0358   54 43 48 20 20 
        035D   20 
  886   035E   52 45 53 45 54  		db	"RESETTED ",#03h
        0363   54 45 44 20 03 
  Wed Mar 12 2008 12:22                                                                                                  Page   18




  887          [00]            		ENDIF
  888                          	;----------------------------------------------
  889                          	;----------------------------------------------
  890          [01]            		IF	TERMINAL
  891                          		mov	a,#0Dh
  892                          		call	tx
  893                          		mov	dptr,#m_swrst
  894                          		call	send_m
  895                          		ret
  896                          	
  897                          	m_swrst:
  898                          	;		-0        1         2         3         4	
  899                          	;		-1234567890123456789012345678901234567890-
  900                          		db	"STOPWATCH RESETTED--> ",#03h
  901          [00]            		ENDIF
  902                          	;----------------------------------------------
  903                          	;-------------------------------------------------------------------
  904                          	
  905                          	
  906                          	
  907                          	
  908                          	;--------------------------------------------------------------------
  909   0368                   	disp_count:
  910                          	;----------------------------------------------
  911          [01]            		IF	SSD
  912                          		ret
  913          [00]            		ENDIF
  914                          	;----------------------------------------------
  915                          	;----------------------------------------------
  916          [01]            		IF	LCD
  917   0368   74 C9           		mov	a,#c0h+9d
  918   036A   12 03 DA        		call	mov_lcd_cursor
  919                          	;
  920   036D   E5 33           		mov	a,ds4
  921   036F   12 03 F3        		call	wr_lcd_dw
  922                          	;
  923                          	;
  924   0372   E5 32           		mov	a,ds3
  925   0374   12 03 F3        		call	wr_lcd_dw
  926                          	;
  927                          	;
  928   0377   E5 31           		mov	a,ds2
  929   0379   12 03 F3        		call	wr_lcd_dw
  930                          	;
  931                          	;
  932   037C   E5 30           		mov	a,ds1
  933   037E   12 03 F3        		call	wr_lcd_dw
  934                          	;
  935   0381   31 AD           		call	wait_1sec
  936   0383   22              		ret
  937          [00]            		ENDIF
  938                          	;----------------------------------------------
  939                          	;----------------------------------------------
  940          [01]            		IF	TERMINAL	
  941                          	;
  942                          		mov	a,ds4
  943                          		call	tx
  Wed Mar 12 2008 12:22                                                                                                  Page   19




  944                          	;
  945                          		mov	a,ds3
  946                          		call	tx
  947                          	;
  948                          		mov	a,ds2
  949                          		call	tx
  950                          	;
  951                          		mov	a,ds1
  952                          		call	tx
  953                          	;
  954                          	;Escape sequence (VT100) for moving cursor back 4 positions..( ESC[4D )
  955                          		mov	a,#1bh		;ESC
  956                          		call	tx
  957                          	;
  958                          		mov	a,#"["
  959                          		call	tx
  960                          	;
  961                          		mov	a,#"4"
  962                          		call	tx
  963                          	;
  964                          		mov	a,#"D"
  965                          		call	tx
  966                          	;
  967                          		ret
  968          [00]            		ENDIF
  969                          	;----------------------------------------------
  970                          	;-------------------------------------------------------------------
  971   0384                   	IF	LCD
        ***** ILLEGAL MNEMONIC *****
  972                          	;-------------------------------------------------------------------------
  973   0384                   	lcd_init:
  974   0384   31 93           		call	wait_5ms
  975   0386   31 93           		call	wait_5ms
  976   0388   31 93           		call	wait_5ms
  977                          	;
  978   038A   74 30           		mov	a,#30h			; port P07..P04 connected to d7_d4
  979   038C   12 03 C0        		call	wr_lcd_cw0		
  980                          	;-------------------------------------------------------------------------
  981   038F   31 93           		call	wait_5ms		;4.1ms
  982   0391   74 30           		mov	a,#30h			;
  983   0393   12 03 C0        		call	wr_lcd_cw0
  984                          	;-------------------------------------------------------------------------
  985   0396   31 93           		call	wait_5ms		;call	wait_100us
  986   0398   74 30           		mov	a,#30h			;
  987   039A   12 03 C0        		call	wr_lcd_cw0
  988                          	;----------------------------------------------------------------------
  989   039D   31 93           		call	wait_5ms		;call	wait_100us
  990   039F   74 20           		mov	a,#20h			;
  991   03A1   12 03 C0        		call	wr_lcd_cw0
  992                          	;----------------------------------------------------------------------
  993   03A4                   	lcd_init1:
  994                          			;function set init
  995                          			;rs=0, r/w=0, code= 0010 n f * * (8-bits)
  996                          			;n= 0 	1-line disp	f= 0  5x7 font
  997                          			; = 1 	2-line disp	 = 1  5x10 font
  998                          			;00101000b	;1-line, 5x7 font	;
  999                          	
  Wed Mar 12 2008 12:22                                                                                                  Page   20




 1000                          	;
 1001   03A4   74 28           		mov	a,#00101000b	;
 1002   03A6   12 03 DA        		call	wr_lcd_cw
 1003                          	;-------------------------------------------------------------------------
 1004                          			;cursor/disp shift	
 1005                          			;rs=0, r/w=0, code= 0001 s/c r/l * *
 1006                          			;s/c r/l= 00 cursor shifts left ie.-- add_counter
 1007                          			;01 right ie.  ++ add_counter 		
 1008                          			;10 display shifts left ie.cursor follows the display
 1009                          			;11 right
 1010                          	;	
 1011                          			;00010100b	;cursor shifts right
 1012                          	;
 1013   03A9   74 14           		mov	a,#00010100b	;
 1014   03AB   12 03 DA        		call	wr_lcd_cw
 1015                          	;-------------------------------------------------------------------------
 1016                          			;disp on/off control
 1017                          			;r/s=0, r/w=0, code= 0000 1 d c b
 1018                          			;d= 0 disp off,	c= 0 cursor off	,b= 0 blink off	 
 1019                          			;   1      on,	   1        on  ,   1       on
 1020                          			;00001111b	;00001100b
 1021                          			;disp,on,cursor & blink off.
 1022                          	;
 1023   03AE   74 0E           		mov	a,#00001110b	;
 1024   03B0   12 03 DA        		call	wr_lcd_cw
 1025                          	;-------------------------------------------------------------------------
 1026                          			;entry mode set
 1027                          			;r/s=0, r/w=0, code= 000001 i/d s
 1028                          			;i/d= 0 --add_counter, disp code & cursor shifts left	
 1029                          			;   = 1 ++add_counter, right
 1030                          			;s= 0 disable disp shift
 1031                          			; = 1 shift disp right(i/d=0) or left(i/d=1)
 1032                          			;0000 0110b	;displays code & cursor shifts right & ++add_counter
 1033                          	;
 1034   03B3   74 06           		mov	a,#00000110b	;
 1035   03B5   12 03 DA        		call	wr_lcd_cw
 1036                          	;-------------------------------------------------------------------------
 1037                          			;clear display
 1038                          			;r/s=0, r/w=0, code= 0000 0001 
 1039                          			;sets add_counter=0
 1040                          			;space code= 20h in all ddram addresses
 1041                          			;sets i/d=1
 1042                          			;cursor at left end of display
 1043                          			;00000001b
 1044                          	;
 1045   03B8   74 01           		mov	a,#00000001b	;
 1046   03BA   12 03 DA        		call	wr_lcd_cw
 1047                          	;
 1048                          	;-------------------------------------------------------------------------
 1049   03BD   C2 80           		clr	p0.0		;backlight on
 1050                          	;-------------------------------------------------------------------------
 1051   03BF   22              		ret
 1052                          	;-------------------------------------------------------------------------
 1053                          	
 1054                          	
 1055                          	
 1056                          	
  Wed Mar 12 2008 12:22                                                                                                  Page   21




 1057                          	;------------------------------------------------------
 1058                          	;write lcd control word. (control word in a) 
 1059                          	;without 5msec wait.
 1060   03C0                   	wr_lcd_cw0:
 1061   03C0   12 04 32        		call	map
 1062   03C3   C2 00           		clr	rs		;Control 
        ***** UNDEFINED SYMBOL *****
 1063   03C5   C2 00           		clr	r/w		;write
        ***** UNDEFINED SYMBOL *****
 1064   03C7   12 04 27        		call	toggle_e
 1065   03CA   22              		ret	
 1066                          	;------------------------------------------------------
 1067                          	
 1068                          	;-----------------------------------------------------------
 1069                          	;clears display and moves cursor to start position.
 1070   03CB                   	clear_display:
 1071   03CB   C0 E0           		push	a
 1072   03CD   12 04 11        		call	busy	
 1073   03D0   74 01           		mov	a,#00000001b
 1074   03D2   12 03 DA        		call	wr_lcd_cw
 1075   03D5   31 93           		call	wait_5ms
 1076   03D7   D0 E0           		pop	a
 1077   03D9   22              		ret
 1078                          	;------------------------------------------------------------
 1079                          	
 1080                          	
 1081                          	;------------------------------------------------------------
 1082                          	;set address in ddram		;address in a.(ie. 1xxxxxxxb)
 1083                          	;cursor moves to new address
 1084                          	
 1085   03DA                   	mov_lcd_cursor:
 1086                          	
 1087                          	;write lcd control word. (control word in a)
 1088                          	
 1089   03DA                   	wr_lcd_cw:
 1090   03DA   C0 E0           		push	a
 1091   03DC   12 04 11        		call	busy		
 1092                          	;--------------------------------
 1093   03DF   12 04 32        		call	map
 1094                          	;--------------------------------
 1095   03E2   C2 00           		clr	rs		;Control 
        ***** UNDEFINED SYMBOL *****
 1096   03E4   C2 00           		clr	r/w		;write
        ***** UNDEFINED SYMBOL *****
 1097   03E6   12 04 27        		call	toggle_e
 1098                          	;--------------------------
 1099   03E9   C4              		swap	a
 1100   03EA   12 04 32        		call	map
 1101                          	;--------------------------------
 1102                          	;
 1103   03ED   12 04 27        		call	toggle_e
 1104                          	;-------------------------------
 1105   03F0   D0 E0           		pop	a
 1106   03F2   22              		ret	
 1107                          	;------------------------------------------------------
 1108                          	
 1109                          	;------------------------------------------------------
  Wed Mar 12 2008 12:22                                                                                                  Page   22




 1110                          	;write lcd data word. (data word in a)
 1111   03F3                   	wr_lcd_dw:
 1112                          	;--------------------------------
 1113   03F3   C0 E0           		push	a
 1114   03F5   12 04 11        		call	busy				
 1115                          	;--------------------------------
 1116   03F8   12 04 32        		call	map
 1117                          	;--------------------------------
 1118   03FB   D2 00           		setb	rs		;data
        ***** UNDEFINED SYMBOL *****
 1119   03FD   C2 00           		clr	r/w		;write
        ***** UNDEFINED SYMBOL *****
 1120   03FF   12 04 27        		call	toggle_e
 1121                          	;--------------------------------
 1122   0402   C4              		swap	a
 1123   0403   12 04 32        		call	map
 1124                          	;--------------------------------
 1125   0406   12 04 27        		call	toggle_e
 1126                          	;--------------------------------
 1127   0409   D0 E0           		pop	a
 1128   040B   22              		ret	
 1129                          	;------------------------------------------------------
 1130                          	
 1131                          	
 1132                          	
 1133                          	;------------------------------------------------------
 1134                          	;converts 00..09 to display 0..9 (ascii) on lcd
 1135   040C                   	wr_lcd_data:
 1136   040C   24 30           		add	a,#30h
 1137   040E   71 F3           		call	wr_lcd_dw
 1138   0410   22              		ret
 1139                          	;------------------------------------------------------
 1140                          	
 1141                          	
 1142                          	
 1143                          	;------------------------------------------------------
 1144   0411                   	busy:
 1145                          	;read lcd status word.
 1146                          	;
 1147   0411   D2 00           		setb	d7		;config (busy flag) as i/p
        ***** UNDEFINED SYMBOL *****
 1148   0413   C2 00           		clr	rs		;Status(Control) 
        ***** UNDEFINED SYMBOL *****
 1149   0415   D2 00           		setb	r/w		;read
        ***** UNDEFINED SYMBOL *****
 1150   0417   00              		nop
 1151   0418   D2 00           		setb	e
        ***** UNDEFINED SYMBOL *****
 1152   041A   00              		nop
 1153   041B   A2 00           		mov	c,d7		;copy busy flag to carry.
        ***** UNDEFINED SYMBOL *****
 1154   041D   00              		nop
 1155   041E   C2 00           		clr	e
        ***** UNDEFINED SYMBOL *****
 1156                          	;-------------------------
 1157   0420   00              		nop
 1158   0421   12 04 27        		call	toggle_e
  Wed Mar 12 2008 12:22                                                                                                  Page   23




 1159   0424   40 EB           		jc	busy
 1160   0426   22              		ret	
 1161                          	;------------------------------------------------------
 1162                          	
 1163                          	;------------------------------------------------------
 1164   0427                   	toggle_e:
 1165   0427   00              		nop
 1166   0428   D2 00           		setb	e
        ***** UNDEFINED SYMBOL *****
 1167   042A   00              		nop
 1168   042B   00              		nop
 1169   042C   00              		nop
 1170   042D   00              		nop
 1171   042E   C2 00           		clr	e
        ***** UNDEFINED SYMBOL *****
 1172   0430   00              		nop
 1173                          	;	
 1174   0431   22              		ret
 1175                          	;------------------------------------------------------
 1176                          	
 1177                          	
 1178                          	;------------------------------------------------------
 1179                          	;maps value in a to lcd port.
 1180   0432                   	map:
 1181   0432   A2 00           		mov	c,A4
        ***** UNDEFINED SYMBOL *****
 1182   0434   92 00           		mov	d4,c
        ***** UNDEFINED SYMBOL *****
 1183                          	;
 1184   0436   A2 00           		mov	c,A5	
        ***** UNDEFINED SYMBOL *****
 1185   0438   92 00           		mov	d5,c
        ***** UNDEFINED SYMBOL *****
 1186                          	;
 1187   043A   A2 00           		mov	c,A6	
        ***** UNDEFINED SYMBOL *****
 1188   043C   92 00           		mov	d6,c
        ***** UNDEFINED SYMBOL *****
 1189                          	;
 1190   043E   A2 00           		mov	c,A7
        ***** UNDEFINED SYMBOL *****
 1191   0440   92 00           		mov	d7,c
        ***** UNDEFINED SYMBOL *****
 1192                          	;
 1193   0442   22              		ret	
 1194                          	;------------------------------------------------------
 1195                          	
 1196                          	
 1197                          	
 1198                          	
 1199                          	
 1200                          	
 1201                          	;------------------------------------------------------
 1202                          	;writes the message starting at the first location
 1203                          	;after 16 positions..it corrects the address for proper
 1204                          	;2 line 16 charc display.
 1205                          	;the string should be terminated by 03h.
  Wed Mar 12 2008 12:22                                                                                                  Page   24




 1206                          	
 1207   0443                   	wr_lcd_message16:
 1208   0443   75 3E 00        		mov	count16,#00h
 1209   0446   C0 E0           		push	a
 1210   0448                   	wlm_l1:
 1211   0448   74 00           		mov	a,#00h
 1212   044A   93              		movc	a,@a+dptr
 1213   044B   B4 03 03        		cjne	a,#03h,wlm_l2
 1214   044E   02 04 61        		jmp	out_wlm
 1215   0451                   	wlm_l2:
 1216   0451   71 F3           		call	wr_lcd_dw	;write at the current cursor position.
 1217   0453   A3              		inc	dptr
 1218                          	;
 1219   0454   05 3E           		inc	count16		;init to 00h
 1220   0456   E5 3E           		mov	a,count16
 1221   0458   B4 10 ED        		cjne	a,#16d,wlm_l1
 1222                          	;
 1223   045B   74 A8           		mov	a,#10101000b	;init new cursor position. 10101001b
 1224   045D   71 DA           		call	mov_lcd_cursor	
 1225                          	;
 1226   045F   81 48           		jmp	wlm_l1
 1227                          	;
 1228   0461                   	out_wlm:
 1229   0461   D0 E0           		pop	a
 1230   0463   22              		ret
 1231                          	;------------------------------------------------------
 1232                          	
 1233                          	
 1234          [FF]            		ENDIF
        ***** NESTED CONDITIONAL ASSEMBLY UNBALANCE DETECTED *****
 1235                          	
 1236          [00]            	 	IF	TERMINAL
 1237                          		include	c:\sw\uart\uart.asm
 1238          [00]            		ELSE
 1239          [01]            			IF	PC_KEYBOARD
 1240                          			include	c:\sw\uart\uart.asm
 1241          [00]            			ENDIF	
 1242          [FF]            		ENDIF
        ***** NESTED CONDITIONAL ASSEMBLY UNBALANCE DETECTED *****
 1243                          	
 1244                          	;--------------------------------------------------------------------
 1245   0464                   		end
 1245   0464                   		end
        ***** NESTED CONDITIONAL ASSEMBLY UNBALANCE DETECTED *****
  Wed Mar 12 2008 12:22                                                                                                  Page   25


Defined            Symbol Name             Value                References

  365    adisp1                             0161           71
  379    adisp2                             0162          135
  392    adisp3                             0163          201
  405    adisp4                             0164          262
  426    adisp_lut                          0166      
  632    ascii_key                          0253          628
  Pre    BSECT                              0000      
 1144    busy                               0411         1072   1091   1114   1159
  532    buzzer                             01DD      
  583    chk_b                              0229          578
  588    chk_c                              0232          583
 1070    clear_display                      03CB          714    752    807    862
   30    cnt_1sh                         =  003D           41     43
   29    cnt_1sl                         =  003C           40     44     48
  Pre    CODE                               0000      
   25    count                           =  0038      
   31    count16                         =  003E         1208   1219   1220
  Pre    DATA                               0000      
   24    dcount                          =  0037          325    330    335    339    344
   21    dcount_1                        =  0034          487    488    497    498    508    509
   22    dcount_2                        =  0035          486    489    496    499    507    510
   23    dcount_3                        =  0036          506    511
  334    debounce                           0137          326
  418    disp_blank                         0165          114    180    242    301
  909    disp_count                         0368      
  702    disp_sw                            0295      
  854    disp_sw_resetted                   0330          699
  744    disp_sw_started                    02C0          673
  799    disp_sw_stopped                    02F8          683
   17    ds1                             =  0030          516    523    541    542    547    566    667    694    768    823    878
                                                          932
   18    ds2                             =  0031          517    524    548    549    554    567    668    695    764    819    874
                                                          928
   19    ds3                             =  0032          518    525    555    556    561    568    669    696    760    815    870
                                                          924
   20    ds4                             =  0033          519    526    562    563    569    670    697    756    811    866    920
  306    dummy                              011B          299
  192    eight                              009C          178
  239    eleven                             00CE          226
  298    fifteen                            0110          286
  147    five                               0072          127
  126    four                               005A          112
  285    fourteen                           0103          273
  623    get_key                            0247      
  649    get_key_status                     0263      
   12    HEX_KEYPAD                      =  0001          604    625    651
  971    IF                                 0384      
  540    inc_d                              01E3      
  320    k                                  0121           74     88    102    117    138    153    168    183    204    218    231
                                                          245    265    278    291    304
  575    keyprocess                         021E      
   28    key_code                        =  003B          331    576    627    630
  602    key_release                        023F          594
   27    krcount                         =  003A          350    353    356
  508    l1                                 01B3          510
  547    l1_id                              01ED          544
  352    l1_k                               0156          349
  Wed Mar 12 2008 12:22                                                                                                  Page   26


Defined            Symbol Name             Value                References

  671    l1_pa                              0277          665
  507    l2                                 01B0          511
  554    l2_id                              01FA          551
  561    l3_id                              0207          558
    9    LCD                             =  0001          713    751    806    861    916    971
  973    lcd_init                           0384      
  993    lcd_init1                          03A4      
 1180    map                                0432         1061   1093   1100   1116   1123
 1085    mov_lcd_cursor                     03DA          918   1224
  719    m_sw                               029F          715
  883    m_swrst                            034E          863
  828    m_swstp                            0316          808
  773    m_swstrt                           02DE          753
  212    nine                               00B4          193
   82    one                                0030           63
  537    out_b                              01E2          533
   49    out_d1sec                          0015           39     40
  346    out_debounce                       014E          321
  571    out_id                             021D          564
  359    out_k                              0160          329    332    335    342    345    351    353
  593    out_kp                             023B          581    586    588    591
  312    out_scanner                        0120           77     91    105    120    141    156    171    186    207    221    234
                                                          248    268    281    294    307
 1228    out_wlm                            0461         1214
   13    PC_KEYBOARD                     =  0000          612    636    657   1239
  664    process_a                          0266          580
  681    process_b                          027D          585
  691    process_c                          0283          590
   47    reinit_1sl                         0012           41
  Pre    RSECT                              0000      
   55    scanner                            0016      
   26    scan_no                         =  0039           57     76     90    104    119    140    155    170    185    206    220
                                                          233    247    267    280    293    306    331
  177    seven                              008C          163
  162    six                                007F          148
  343    spurious_key                       0148          338
    8    SSD                             =  0000          366    380    393    406    419    704    746    801    856    911
  225    ten                                00C1          213
   10    TERMINAL                        =  0000          724    780    835    890    940   1236
  515    test_display                       01C0      
  272    thirteen                           00F6          254
  111    three                              004A           97
 1164    toggle_e                           0427         1064   1097   1103   1120   1125   1158
   34    top_of_stack                    =  0060      
  253    twelve                             00DE          240
   96    two                                003D           83
  505    wait_1sec                          01AD          521    528    935
  495    wait_20ms                          01A0      
  485    wait_5ms                           0193          974    975    976    981    985    989   1075
 1210    wlm_l1                             0448         1221   1226
 1215    wlm_l2                             0451         1213
 1089    wr_lcd_cw                          03DA         1002   1014   1024   1035   1046   1074
 1060    wr_lcd_cw0                         03C0          979    983    987    991
 1135    wr_lcd_data                        040C      
 1111    wr_lcd_dw                          03F3          757    761    765    769    812    816    820    824    867    871    875
                                                          879    921    925    929    933   1137   1216
 1207    wr_lcd_message16                   0443          716    754    809    864
  Wed Mar 12 2008 12:22                                                                                                  Page   27


Defined            Symbol Name             Value                References

   62    zero                               0018      




           Lines Assembled :  1245             Assembly Errors :  79


