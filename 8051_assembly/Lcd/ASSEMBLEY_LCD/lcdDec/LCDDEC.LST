  Wed Dec  3 2008 14:33                                                                                                  Page    1







               2500 A.D. 8051 Macro Assembler  -  Version 4.03c
               ------------------------------------------------

                       Input  Filename : c:\lcdDec\lcdDec.asm
                       Output Filename : c:\lcdDec\lcdDec.obj


    4                          		.list on
    5                          	;--------------------------------------------------------------------
    6                          	;conditional assembly...
    7                          	;Choice of outputs..
    8          0000            	SSD:		EQU	0
    9          0001            	LCD:		EQU	1
   10          0000            	TERMINAL:	EQU	0
   11                          	;choice of inputs..
   12          0001            	HEX_KEYPAD	EQU	1
   13          0000            	PC_KEYBOARD	EQU	0
   14                          	;--------------------------------------------------------------------
   15   0000                   		include	c:\lcdDec\data\reg.asm
   16                          	;SW data\data.def 
   17                          	;-------------------------------------------------------------------
   18                          	;define bit variables here...
   19                          	;
   20          00E0            	A0:	REG	A.0
   21          00E1            	A1:	REG	A.1
   22          00E2            	A2:	REG	A.2
   23          00E3            	A3:	REG	A.3
   24          00E4            	A4:	REG	A.4
   25          00E5            	A5:	REG	A.5
   26          00E6            	A6:	REG	A.6
   27          00E7            	A7:	REG	A.7
   28                          	;
   29          0081            	rs:   	REG     P0.1    ;resgister select for LCD
   30          0082            	r/w:   	REG     P0.2	;read/write for LCD
   31          0083            	e:   	REG     P0.3	;enable for LCD
   32          0084            	d4:   	REG     P0.4	;data bit d4 for LCD
   33          0085            	d5:  	REG     P0.5	;data bit d5 for LCD
   34          0086            	d6:   	REG     P0.6	;data bit d6 for LCD
   35          0087            	d7:  	REG     P0.7	;data bit d7 for LCD
   36                          	;
   37          00A0            	sl1:	REG	P2.0		;display1/row1
   38          00A1            	sl2:	REG	P2.1		;display2/row2
   39          00A2            	sl3:	REG	P2.2		;display3/row3
   40          00A3            	sl4:	REG	P2.3		;display4/row4
   41                          	;
   42          00A4            	krl1:	REG	p2.4		;key return line 1
   43          00A5            	krl2:	REG	p2.5		;key return line 2
   44          00A6            	krl3:	REG	p2.6		;key return line 3
   45          00A7            	krl4:	REG	p2.7		;key return line 4
   46                          	
   47                          	;----------------------------------------------------
   48          0000            	key_ready:	REG	00h	;this flag is set when key is detected (after debounce).
   49          0001            	nkp:		REG	01h	;this flag is set when no key is pressed.
   50          0002            	tb:		REG	02h	;temp bit location
  Wed Dec  3 2008 14:33                                                                                                  Page    2




   51                          	;----------------------------------------------------
   52          0003            	start_sw:	REG	03h	;
   53          0004            	s1_over:	REG	04h	;
   54          0005            	first_time:	REG	05h	;
   55          0006            	start_buzzer:	REG	06h	;buzzer bit
   56          0007            	dow:            REG     07h
   57          0008            	stop_sw:		reg	08h            ;decriment flag
   58                          	;--------------------------------------------------------------------
   59                          	
   60                          	;-------------------------------------------------------------------
   61                          	;SW data\data.def 
   62                          	
   63   0000                   		include	c:\lcdDec\data\equ.asm
   64                          	;SW data\data.equ
   65                          	;-----------------------------------------------------------------
   66                          	
   67                          	;define byte variable...
   68          0030            	ds1:		EQU	30h
   69          0031            	ds2:		EQU	31h
   70          0032            	ds3:		EQU	32h
   71          0033            	ds4:		EQU	33h
   72          0034            	dcount_1:		EQU	34h
   73          0035            	dcount_2:		EQU	35h
   74          0036            	dcount_3:		EQU	36h
   75          0037            	dcount:		EQU	37h
   76          0038            	count:		EQU	38h
   77          0039            	scan_no:		EQU	39h
   78          003A            	krcount:		EQU	3ah
   79          003B            	key_code:		EQU	3bh
   80          003C            	cnt_1sl:		EQU	3ch
   81          003D            	cnt_1sh:		EQU	3dh
   82          003E            	count16:		EQU	3eh
   83                          	
   84                          	;---------------------------------------------------
   85                          	;define immediate values..
   86          0060            	top_of_stack:	EQU	60h	
   87                          	
   88                          	;--------------------------------------------------------------------
   89                          	;SW data\data.equ
   90                          	
   91                          	;--------------------------------------------------------------------
   92   0000                   		org 	0000h
   93   0000   02 00 2C        		jmp	main
   94                          	;--------------------------------------------------------------------
   95   0003                   		include	c:\lcdDec\asm\isr_tab.asm
   96                          	;SW asm\isr_tab
   97                          	;--------------------------------------------------------------------
   98   0003                   		org     0003h
   99   0003   32              		reti			;ljmp	isr_i0
  100                          	;
  101   000B                   		org     000bh
  102   000B   02 00 A9        		ljmp    isr_t0		;timer0 interrupt
  103                          	;
  104   0013                   		org     0013h
  105   0013   32              		reti			;ljmp    isr_i1
  106                          	;
  107   001B                   		org     001bh
  Wed Dec  3 2008 14:33                                                                                                  Page    3




  108   001B   32              		reti
  109                          					;ljmp isr_t1;timer1 interrupt
  110                          					;(isr_t1)baud rate for Usart
  111                          					;(...hence no Interrupt)
  112                          	;
  113   0023                   		org     0023h
  114   0023   32              	         	reti
  115                          					;ljmp    isr_receive         
  116                          					;Interrupt enabled only for receive.
  117                          	;
  118   002B                   		org     002bh
  119   002B   32              	         	reti
  120                          					;ljmp    isr_t2
  121                          	;
  122                          	;--------------------------------------------------------------------
  123                          	
  124                          	;--------------------------------------------------------------------
  125                          	;SW asm\isr_tab
  126                          	
  127                          	;--------------------------------------------------------------------
  128                          	;Specification for stopwatch...
  129                          	;A --> START	;start the stopwatch from the current count.
  130                          	;B --> STOP	;stops the stopwatch current count frozen.
  131                          	;C --> RESET	;reset the stopwatch to 0000.
  132                          	;--------------------------------------------------------------------
  133   002C                   	main:
  134   002C   C2 08           		 clr 	stop_sw
  135   002E   75 81 60        	      	mov	sp,#top_of_stack
  136   0031   D2 AF           		setb	ea		;enable all interrupts.
  137   0033   12 00 4E        		call	init	;init timer,test's display,etc.
  138                          	;
  139   0036   12 03 CA        		call	disp_sw	;display stopwatch
  140   0039                   	l1_main:
  141   0039   12 03 C7        		call	get_key_status	;carry set indicated key 				;pressed
  142   003C   40 08           		jc	l2_main
  143   003E   20 05 F8        		jb	first_time,l1_main
  144   0041   12 04 D5        		call	disp_count
  145   0044   01 39           		jmp	l1_main
  146   0046                   	l2_main:
  147   0046   12 03 AB        		call	get_key
  148   0049   12 03 7D        		call	keyprocess
  149   004C   01 39           		jmp	l1_main
  150                          	
  151                          	;--------------------------------------------------------------------
  152   004E                   		include	c:\lcdDec\asm\init.asm
  153                          	;SW asm\init.asm
  154                          	;--------------------------------------------------------------------
  155                          	;init
  156                          	;init_timer0
  157                          	;init_timer1
  158                          	;init_uart
  159                          	;init_keypad
  160                          	;init_delay_1sec
  161                          	;init_sw
  162                          	;----------------------------------------------------------
  163                          	
  164   004E                   	init:
  Wed Dec  3 2008 14:33                                                                                                  Page    4




  165                          	;--------------------------
  166   004E   12 00 5E        		call	init_timer0	;for 1ms interrupt
  167                          	;--------------------------
  168          [01]            		IF	SSD
  169                          		call	test_display	;in disp\disp.asm 
  170          [00]            		ENDIF
  171                          	;---------------------------
  172          [01]            		IF	LCD
  173   0051   12 04 F1        		call	lcd_init		;in lcd\lcd.asm
  174          [00]            		ENDIF
  175                          	;--------------------------
  176          [01]            		IF	TERMINAL
  177                          		call	init_timer1	;for baud rate (9600)
  178                          		call	init_uart
  179                          		setb	ti
  180          [01]            		ELSE
  181   0054                   			
  182          [02]            		IF	PC_KEYBOARD
  183                          			call	init_timer1     ;for baud rate (9600)
  184                          			call	init_uart
  185                          			setb	ti
  186          [01]            			ENDIF
  187          [00]            		ENDIF
  188                          	;------------------------------------------------
  189   0054   12 00 81        		call	init_keypad
  190                          	;-------------------------------------------------
  191   0057   12 00 99        		call	init_delay_1sec
  192                          	;-------------------------------------------------
  193   005A   12 00 A2        		call	init_sw
  194                          	;--------------------------------------------------
  195   005D   22              		ret
  196                          	;----------------------------------------------------------
  197                          	;----------------------------------------------------------
  198                          	;(89h)
  199                          	;TMOD-->GATE, C/T, M1,M0, GATE, C/T, M1, M0,T/C	(timer1,timer0)
  200                          	;init timer 0  for 1msec
  201                          	
  202   005E                   	init_timer0:
  203   005E   43 89 01        		orl	tmod,#01h	       ;t0 in 16 bit timer mode.
  204   0061   75 8A 66        		mov	tl0,#66h	;Init timer0 with countfor 1msec.
  205   0064   75 8C FC        		mov	th0,#0fch	;count=0fc66h for 1msec.
  206   0067   D2 8C           		setb	tr0	;start timer 0.
  207   0069   D2 A9           	        	setb	et0	;enable timer 0 Interrupt.
  208   006B   22              		ret 
  209                          	;----------------------------------------------------------
  210                          	;----------------------------------------------------------
  211   006C                   	init_timer1:
  212   006C   43 89 20        		orl	tmod,#20h  ;t1 in 8 bit auto reload mode.
  213   006F   75 8D FD        		mov     	th1,#0fdh    ;init. TH1 with count for
  214                          				  ;9600 baud (11.059MHz)
  215   0072   D2 8E           		setb	tr1               ;Start timer 1 (baud rate)
  216   0074   22              		ret 
  217                          	;----------------------------------------------------------
  218                          	;----------------------------------------------------------
  219                          	;Code to initialise serial port.
  220   0075                   	init_uart:
  221   0075   75 98 40        		mov     scon,#01000000b        ;Init. serial control ie 			            
                                 		             ;mode 1 ( 8 bit uart);8 bit 			            		
                                	             ;UART mode(variable).
  Wed Dec  3 2008 14:33                                                                                                  Page    5




  222   0078   C2 98           		clr	ri                            ;Clear Receive Interrupt
  223   007A   C2 99           		clr	ti                             ;Clear Transmit Interrupt
  224   007C   D2 9C           		setb	ren                         ;enable receiver
  225   007E   D2 AC           		setb   	es                  ;Enable serial interrupt
  226   0080   22              		ret
  227                          	;----------------------------------------------------------
  228                          	;----------------------------------------------------------
  229   0081                   	init_keypad:
  230   0081   D2 A4           		setb	krl1
  231   0083   D2 A5           		setb	krl2
  232   0085   D2 A6           		setb	krl3
  233   0087   D2 A7           		setb	krl4
  234   0089   75 39 00        		mov	scan_no,#00d
  235   008C   75 37 21        		mov	dcount,#33d
  236   008F   75 3A 20        		mov	krcount,#32d
  237   0092                   		
  238   0092   C2 00           		clr	key_ready
  239   0094   C2 01           		clr	nkp
  240   0096   C2 06           		clr	start_buzzer
  241   0098   22              		ret
  242                          	;--------------------------------------------------------------------
  243                          	;--------------------------------------------------------------------
  244   0099                   	init_delay_1sec:
  245   0099   75 3C E8        		mov	cnt_1sl,#0e8h
  246   009C   75 3D 04        		mov	cnt_1sh,#04h
  247   009F   D2 04           		setb	s1_over
  248   00A1   22              		ret
  249                          	;--------------------------------------------------------------------
  250                          	;--------------------------------------------------------------------
  251   00A2                   	init_sw:
  252   00A2   C2 03           		clr	start_sw
  253   00A4   C2 08           		clr	stop_sw
  254   00A6   D2 05           		setb	first_time
  255   00A8   22              		ret
  256                          	;--------------------------------------------------------------------
  257                          	
  258                          	
  259                          	
  260                          	
  261                          	;--------------------------------------------------------------------
  262                          	;SW asm\init.asm
  263                          	
  264   00A9                   		include	c:\lcdDec\asm\isr.asm
  265                          	;SW asm\isr.asm
  266                          	;--------------------------------------------------------------------
  267                          	;isr_t0
  268                          	;delay_1sec
  269                          	;scanner
  270                          	;k
  271                          	;adisp1,2,3,4,disp_blank
  272                          	;adisp_lut
  273                          	;--------------------------------------------------------------------
  274                          	;--------------------------------------------------------------------
  275   00A9                   	isr_t0:
  276   00A9   C0 E0           		push	a
  277   00AB   C0 D0           		push	psw
  278   00AD   C0 83           		push	dph
  Wed Dec  3 2008 14:33                                                                                                  Page    6




  279   00AF   C0 82           		push	dpl
  280                          	
  281   00B1   11 5E           		call	init_timer0
  282                          	;
  283   00B3   12 00 DB        		call	delay_1sec
  284                          	
  285   00B6   12 02 B8        		call	buzzer
  286   00B9   12 00 F1        		call	scanner		;spoils a,psw,dptr
  287                          	;
  288                          	;----------------------------------
  289   00BC   30 03 08        		jnb	start_sw,out1_swl
  290   00BF   30 04 10        		jnb	s1_over,out_isr
  291   00C2   12 02 FB        		call	inc_d
  292   00C5   C2 04           		clr	s1_over
  293   00C7                   	out1_swl:
  294   00C7   30 08 08        		jnb	stop_sw,out_isr
  295   00CA   30 04 05        		jnb	s1_over,out_isr
  296   00CD   12 03 3D        		call	dec_d
  297   00D0   C2 04           		clr	s1_over
  298                          	
  299                          	
  300                          	;-----------------------------------
  301                          	;
  302   00D2                   	out_isr:
  303   00D2   D0 82           		pop	dpl
  304   00D4   D0 83           		pop	dph
  305   00D6   D0 D0           		pop	psw
  306   00D8   D0 E0           		pop	a
  307   00DA   32              		reti
  308                          	;--------------------------------------------------------------------
  309                          	;--------------------------------------------------------------------
  310                          	;count for 1000ms (04e8h) is loaded in cnt_1sl (0e8h) and cnt_1sh (04h)
  311                          	;s1_over flag initially set.
  312   00DB                   	delay_1sec:
  313   00DB   20 04 12        		jb	s1_over,out_d1sec
  314   00DE   D5 3C 0F        		djnz	cnt_1sl,out_d1sec
  315   00E1   D5 3D 09        		djnz	cnt_1sh,reinit_1sl
  316                          	;count over..
  317   00E4   75 3D 04        		mov	cnt_1sh,#04h
  318   00E7   75 3C E8        		mov	cnt_1sl,#0e8h
  319   00EA   D2 04           		setb	s1_over
  320   00EC   22              		ret	
  321   00ED                   	reinit_1sl:
  322   00ED   75 3C FF        		mov	cnt_1sl,#0ffh
  323   00F0                   	out_d1sec:
  324   00F0   22              		ret	
  325                          	;--------------------------------------------------------------------
  326                          	;--------------------------------------------------------------------
  327                          	
  328                          	
  329   00F1                   	scanner:	
  330                          	;-----------------------------------------------------------------
  331   00F1   E5 39           		mov	a,scan_no
  332                          	;-----------------------------------------------------------------
  333                          	
  334                          	
  335                          	;-(0)------------------------------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page    7




  336   00F3                   	zero:
  337   00F3   B4 00 15        		cjne	a,#00d,one		;
  338                          	;----------------------------------------
  339                          	;key_output_line
  340   00F6   C2 A0           		clr	sl1			;
  341   00F8   D2 A1           		setb	sl2			;
  342   00FA   D2 A2           		setb	sl3			;
  343   00FC   D2 A3           		setb	sl4			;
  344                          	;----------------------------------------
  345   00FE   12 02 3C        		call	adisp1
  346                          	;----------------------------------------
  347   0101   A2 A4           		mov	c,krl1
  348   0103   12 01 FC        		call	k
  349                          	;----------------------------------------
  350   0106   75 39 01        		mov	scan_no,#01d
  351   0109   21 FB           		ajmp	out_scanner
  352                          	;--------------------------------------------------------------------
  353                          	
  354                          	
  355                          	;-(1)----------------------------------------------------------------
  356   010B                   	one:
  357   010B   B4 01 0A        		cjne	a,#01d,two		;
  358                          	;----------------------------------------
  359                          	
  360                          	;----------------------------------------
  361   010E   A2 A5           		mov	c,krl2
  362   0110   12 01 FC        		call	k
  363                          	;----------------------------------------
  364   0113   75 39 02        		mov	scan_no,#02d	
  365   0116   21 FB           		ajmp	out_scanner
  366                          	;--------------------------------------------------------------------
  367                          	
  368                          	
  369                          	;-(2)----------------------------------------------------------------
  370   0118                   	two:
  371   0118   B4 02 0A        		cjne	a,#02d,three		;
  372                          	;----------------------------------------
  373                          	
  374                          	;----------------------------------------
  375   011B   A2 A6           		mov	c,krl3
  376   011D   12 01 FC        		call	k
  377                          	;----------------------------------------
  378   0120   75 39 03        		mov	scan_no,#03d
  379   0123   21 FB           		ajmp	out_scanner
  380                          	;--------------------------------------------------------------------
  381                          	
  382                          	
  383                          	
  384                          	;-(3)----------------------------------------------------------------
  385   0125                   	three:
  386   0125   B4 03 0D        		cjne	a,#03d,four		;
  387                          	;----------------------------------------
  388   0128   12 02 40        		call	disp_blank
  389                          	;----------------------------------------
  390   012B   A2 A7           		mov	c,krl4
  391   012D   12 01 FC        		call	k
  392                          	;----------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page    8




  393   0130   75 39 04        		mov	scan_no,#04d
  394   0133   21 FB           		ajmp	out_scanner
  395                          	;--------------------------------------------------------------------
  396                          	
  397                          	
  398                          	
  399                          	;-(4)----------------------------------------------------------------
  400   0135                   	four:
  401   0135   B4 04 15        		cjne	a,#04d,five		;
  402                          	;----------------------------------------
  403                          	;key_output_line
  404   0138   D2 A0           		setb	sl1			;
  405   013A   C2 A1           		clr	sl2			;
  406   013C   D2 A2           		setb	sl3			;
  407   013E   D2 A3           		setb	sl4			;
  408                          	;----------------------------------------
  409   0140   12 02 3D        		call	adisp2
  410                          	;----------------------------------------
  411   0143   A2 A4           		mov	c,krl1
  412   0145   12 01 FC        		call	k
  413                          	;----------------------------------------
  414   0148   75 39 05        		mov	scan_no,#05d
  415   014B   21 FB           		ajmp	out_scanner
  416                          	;--------------------------------------------------------------------
  417                          	
  418                          	
  419                          	
  420                          	;-(5)----------------------------------------------------------------
  421   014D                   	five:
  422   014D   B4 05 0A        		cjne	a,#05d,six		;
  423                          	;----------------------------------------
  424                          	
  425                          	;----------------------------------------
  426   0150   A2 A5           		mov	c,krl2
  427   0152   12 01 FC        		call	k
  428                          	;----------------------------------------
  429   0155   75 39 06        		mov	scan_no,#06d
  430   0158   21 FB           		ajmp	out_scanner
  431                          	;--------------------------------------------------------------------
  432                          	
  433                          	
  434                          	
  435                          	;-(6)----------------------------------------------------------------
  436   015A                   	six:
  437   015A   B4 06 0A        		cjne	a,#06d,seven		;
  438                          	;----------------------------------------
  439                          	
  440                          	;----------------------------------------
  441   015D   A2 A6           		mov	c,krl3
  442   015F   12 01 FC        		call	k
  443                          	;----------------------------------------
  444   0162   75 39 07        		mov	scan_no,#07d
  445   0165   21 FB           		ajmp	out_scanner
  446                          	;--------------------------------------------------------------------
  447                          	
  448                          	
  449                          	
  Wed Dec  3 2008 14:33                                                                                                  Page    9




  450                          	;-(7)----------------------------------------------------------------
  451   0167                   	seven:
  452   0167   B4 07 0D        		cjne	a,#07d,eight		;
  453                          	;----------------------------------------
  454   016A   12 02 40        		call	disp_blank
  455                          	;----------------------------------------
  456   016D   A2 A7           		mov	c,krl4
  457   016F   12 01 FC        		call	k
  458                          	;----------------------------------------
  459   0172   75 39 08        		mov	scan_no,#08d
  460   0175   21 FB           		ajmp	out_scanner
  461                          	;--------------------------------------------------------------------
  462                          	
  463                          	
  464                          	
  465                          	;-(8)----------------------------------------------------------------
  466   0177                   	eight:
  467   0177   B4 08 15        		cjne	a,#08d,nine		;
  468                          	;----------------------------------------
  469                          	;key_output_line
  470   017A   D2 A0           		setb	sl1			;
  471   017C   D2 A1           		setb	sl2			;
  472   017E   C2 A2           		clr	sl3			;
  473   0180   D2 A3           		setb	sl4			;
  474                          	;----------------------------------------
  475   0182   12 02 3E        		call	adisp3
  476                          	;----------------------------------------
  477   0185   A2 A4           		mov	c,krl1
  478   0187   12 01 FC        		call	k
  479                          	;----------------------------------------
  480   018A   75 39 09        		mov	scan_no,#09d
  481   018D   21 FB           		ajmp	out_scanner
  482                          	;--------------------------------------------------------------------
  483                          	
  484                          	
  485                          	;-(9)----------------------------------------------------------------
  486   018F                   	nine:
  487   018F   B4 09 0A        		cjne	a,#09d,ten		;
  488                          	;----------------------------------------
  489                          	
  490                          	;----------------------------------------
  491   0192   A2 A5           		mov	c,krl2
  492   0194   12 01 FC        		call	k
  493                          	;----------------------------------------
  494   0197   75 39 0A        		mov	scan_no,#10d
  495   019A   21 FB           		ajmp	out_scanner
  496                          	;--------------------------------------------------------------------
  497                          	
  498                          	;-(10(a))------------------------------------------------------------
  499   019C                   	ten:
  500   019C   B4 0A 0A        		cjne	a,#10d,eleven		;
  501                          	;----------------------------------------
  502                          	
  503                          	;----------------------------------------
  504   019F   A2 A6           		mov	c,krl3
  505   01A1   12 01 FC        		call	k
  506                          	;----------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page   10




  507   01A4   75 39 0B        		mov	scan_no,#11d
  508   01A7   21 FB           		ajmp	out_scanner
  509                          	;--------------------------------------------------------------------
  510                          	
  511                          	
  512                          	;-(11(b))------------------------------------------------------------
  513   01A9                   	eleven:
  514   01A9   B4 0B 0D        		cjne	a,#11d,twelve		;
  515                          	;----------------------------------------
  516   01AC   12 02 40        		call	disp_blank
  517                          	;----------------------------------------
  518   01AF   A2 A7           		mov	c,krl4
  519   01B1   12 01 FC        		call	k
  520                          	;----------------------------------------
  521   01B4   75 39 0C        		mov	scan_no,#12d
  522   01B7   21 FB           		ajmp	out_scanner
  523                          	;--------------------------------------------------------------------
  524                          	
  525                          	
  526                          	;-(12(c))------------------------------------------------------------
  527   01B9                   	twelve:
  528   01B9   B4 0C 15        		cjne	a,#12d,thirteen		;
  529                          	;----------------------------------------
  530                          	;key_output_line
  531   01BC   D2 A0           		setb	sl1			;
  532   01BE   D2 A1           		setb	sl2			;
  533   01C0   D2 A2           		setb	sl3			;
  534   01C2   C2 A3           		clr	sl4			;
  535                          	;----------------------------------------
  536   01C4   12 02 3F        		call	adisp4
  537                          	;----------------------------------------
  538   01C7   A2 A4           		mov	c,krl1
  539   01C9   12 01 FC        		call	k
  540                          	;----------------------------------------
  541   01CC   75 39 0D        		mov	scan_no,#13d
  542   01CF   21 FB           		ajmp	out_scanner
  543                          	;--------------------------------------------------------------------
  544                          	
  545                          	;-(13(d))------------------------------------------------------------
  546   01D1                   	thirteen:
  547   01D1   B4 0D 0A        		cjne	a,#13d,fourteen		;
  548                          	;----------------------------------------
  549                          	
  550                          	;----------------------------------------
  551   01D4   A2 A5           		mov	c,krl2
  552   01D6   12 01 FC        		call	k
  553                          	;----------------------------------------
  554   01D9   75 39 0E        		mov	scan_no,#14d
  555   01DC   21 FB           		ajmp	out_scanner
  556                          	;--------------------------------------------------------------------
  557                          	
  558                          	;-(14(e))------------------------------------------------------------
  559   01DE                   	fourteen:
  560   01DE   B4 0E 0A        		cjne	a,#14d,fifteen		;
  561                          	;----------------------------------------
  562                          	
  563                          	;----------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page   11




  564   01E1   A2 A6           		mov	c,krl3
  565   01E3   12 01 FC        		call	k
  566                          	;----------------------------------------
  567   01E6   75 39 0F        		mov	scan_no,#15d
  568   01E9   21 FB           		ajmp	out_scanner
  569                          	;--------------------------------------------------------------------
  570                          	
  571                          	;-(15(f))------------------------------------------------------------
  572   01EB                   	fifteen:
  573   01EB   B4 0F 08        		cjne	a,#15d,dummy		;
  574                          	;----------------------------------------
  575   01EE   12 02 40        		call	disp_blank
  576                          	;----------------------------------------
  577   01F1   A2 A7           		mov	c,krl4
  578   01F3   12 01 FC        		call	k
  579                          	;----------------------------------------
  580   01F6   75 39 00        	dummy:	mov	scan_no,#00d
  581   01F9   21 FB           		ajmp	out_scanner
  582                          	;--------------------------------------------------------------------
  583                          	;--------------------------------------------------------------------
  584   01FB                   	out_scanner:
  585                          	;	
  586   01FB   22              		ret
  587                          	;-----------------------------------------------------------------------
  588                          	;----------------------------------------------------------------------
  589                          	;comes with c flag having the status of the corrosponding krl line.
  590   01FC                   	k:
  591   01FC   20 00 2A        		jb	key_ready,out_debounce
  592                          	;-------------------------------------
  593                          	;key detect....
  594   01FF   92 02           		mov	tb,c			;save carry bit
  595   0201   E5 37           		mov	a,dcount
  596   0203   B4 21 0C        		cjne	a,#33d,debounce
  597   0206   A2 02           		mov	c,tb			;restore carry bit
  598                          	;key pressed for the first time...
  599   0208   40 31           		jc	out_k
  600   020A   15 37           		dec	dcount
  601   020C   85 39 3B        		mov	key_code,scan_no	;copy the scan_no in key_code
  602   020F   02 02 3B        		jmp	out_k
  603                          	;-------------------------------------	
  604   0212                   	debounce:
  605   0212   D5 37 26        		djnz	dcount,out_k
  606                          	;debounce complete..now check for key press...
  607   0215   A2 02           		mov	c,tb		;restore carry bit
  608   0217   40 0A           		jc	spurious_key
  609   0219   75 37 21        		mov	dcount,#33d
  610   021C   D2 00           		setb	key_ready		;key still pressed (after debounce)
  611   021E   D2 06           		setb	start_buzzer	;buzzer on
  612   0220   02 02 3B        		jmp	out_k
  613   0223                   	spurious_key:
  614   0223   75 37 21        		mov	dcount,#33d
  615   0226   02 02 3B        		jmp	out_k
  616   0229                   	out_debounce:
  617                          	;-------------------------------------
  618                          	;check for key release...
  619   0229   40 06           		jc	l1_k
  620   022B   75 3A 20        		mov	krcount,#32d
  Wed Dec  3 2008 14:33                                                                                                  Page   12




  621   022E   02 02 3B        		jmp	out_k
  622   0231                   	l1_k:
  623   0231   D5 3A 07        		djnz	krcount,out_k
  624   0234   D2 01           		setb	nkp
  625   0236   C2 06           		clr	start_buzzer	;buzzer off
  626   0238   75 3A 20        		mov	krcount,#32d
  627                          	;	jmp	out_k
  628                          	;-------------------------------------
  629   023B                   	out_k:
  630   023B   22              		ret		
  631                          	;-----------------------------------------------
  632                          	;------------------------------------------
  633   023C                   	adisp1:
  634          [01]            		IF	SSD
  635                          		mov 	dptr,#adisp_lut
  636                          		mov 	a,ds1
  637                          		clr	c
  638                          		subb	a,#"0"
  639                          		movc 	a,@a+dptr
  640                          		mov 	p0,a
  641          [00]            		ENDIF
  642   023C   22              		ret
  643                          	;------------------------------------------
  644                          	;------------------------------------------
  645   023D                   	adisp2:
  646          [01]            		IF	SSD
  647                          		mov 	dptr,#adisp_lut
  648                          		mov 	a,ds2
  649                          		clr	c
  650                          		subb	a,#"0"
  651                          		movc 	a,@a+dptr
  652                          		mov 	p0,a
  653          [00]            		ENDIF
  654   023D   22              		ret
  655                          	;------------------------------------------
  656                          	;------------------------------------------
  657   023E                   	adisp3:
  658          [01]            		IF	SSD
  659                          		mov 	dptr,#adisp_lut
  660                          		mov 	a,ds3
  661                          		clr	c
  662                          		subb	a,#"0"
  663                          		movc 	a,@a+dptr
  664                          		mov 	p0,a
  665          [00]            		ENDIF
  666   023E   22              		ret
  667                          	;------------------------------------------
  668                          	;------------------------------------------
  669   023F                   	adisp4:
  670          [01]            		IF	SSD
  671                          		mov 	dptr,#adisp_lut
  672                          		mov 	a,ds4
  673                          		clr	c
  674                          		subb	a,#"0"
  675                          		movc 	a,@a+dptr
  676                          		mov 	p0,a
  677          [00]            		ENDIF
  Wed Dec  3 2008 14:33                                                                                                  Page   13




  678   023F   22              		ret
  679                          	;------------------------------------------
  680                          	;------------------------------------------
  681   0240                   	disp_blank:
  682          [01]            		IF	SSD
  683                          		mov 	p0,#00h
  684          [00]            		ENDIF
  685   0240   22              		ret
  686                          	;------------------------------------------
  687                          	;-----------------------------------------------
  688   0241                   	adisp_lut:
  689                          	;		-abcdefgd-		
  690   0241   FC              		db	 11111100b	;0
  691   0242   60              		db	 01100000b	;1
  692   0243   DA              		db	 11011010b	;2
  693   0244   F2              		db	 11110010b	;3
  694   0245   66              		db	 01100110b	;4
  695   0246   B6              		db	 10110110b	;5
  696   0247   BE              		db	 10111110b	;6
  697   0248   E0              		db	 11100000b	;7
  698   0249   FE              		db	 11111110b	;8
  699   024A   E6              		db	 11100110b	;9
  700                          	;
  701   024B   FF              		db	 11111111b	;3a
  702   024C   FF              		db	 11111111b	;3b
  703   024D   FF              		db	 11111111b	;3c
  704   024E   FF              		db	 11111111b	;3d
  705   024F   FF              		db	 11111111b	;3e
  706   0250   FF              		db	 11111111b	;3f
  707   0251   FF              		db	 11111111b	;40
  708                          	;
  709   0252   EE              		db	 11101110b	;A
  710   0253   3E              		db	 00111110b	;B
  711   0254   9C              		db	 10011100b	;C
  712   0255   7A              		db	 01111010b	;D
  713   0256   9E              		db	 10011110b	;E
  714   0257   8E              		db	 10001110b	;F
  715   0258   BC              		db	 10111100b	;G
  716   0259   6E              		db	 01101110b	;H
  717   025A   0C              		db	 00001100b	;I
  718   025B   70              		db	 01110000b	;J
  719   025C   0E              		db	 00001110b	;K
  720   025D   1C              		db	 00011100b	;L
  721   025E   AA              		db	 10101010b	;M
  722   025F   2A              		db	 00101010b	;N
  723   0260   3A              		db	 00111010b	;O
  724   0261   CE              		db	 11001110b	;P
  725   0262   D6              		db	 11010110b	;Q
  726   0263   0A              		db	 00001010b	;R
  727   0264   B6              		db	 10110110b	;S
  728   0265   1E              		db	 00011110b	;T
  729   0266   7C              		db	 01111100b	;U
  730   0267   38              		db	 00111000b	;V
  731   0268   B8              		db	 10111000b	;W
  732   0269   62              		db	 01100010b	;X
  733   026A   66              		db	 01100110b	;Y
  734   026B   92              		db	 10010010b	;Z
  Wed Dec  3 2008 14:33                                                                                                  Page   14




  735   026C   00              		db	 00000000b	;Z+1 for space
  736   026D   FF              		db	 11111111b	;Z+2 for all segment glow
  737                          	;-----------------------------------------------------------------------
  738                          	
  739                          	;-----------------------------------------------------------------------
  740                          	;SW asm\isr.asm
  741                          	
  742   026E                   		include	c:\lcdDec\util\delay.asm
  743                          	;SW util/delay.asm
  744                          	;--------------------------------------------------------------------
  745                          	;wait_5ms
  746                          	;wait_20ms
  747                          	;wait_1sec
  748                          	;--------------------------------------------------------------------
  749                          	;-----------------------------------------------
  750   026E                   	wait_5ms:
  751   026E   75 35 15        		mov	dcount_2,#21d
  752   0271   75 34 FF        		mov	dcount_1,#0ffh		;$-3-3
  753   0274   D5 34 FD        		djnz	dcount_1,$		;$-3
  754   0277   D5 35 F7        		djnz	dcount_2,$-3-3
  755   027A   22              		ret
  756                          	;-----------------------------------------------
  757                          	;-----------------------------------------------
  758   027B                   	wait_20ms:
  759   027B   75 35 55        		mov	dcount_2,#55h
  760   027E   75 34 FF        		mov	dcount_1,#0ffh		;$-3-3
  761   0281   D5 34 FD        		djnz	dcount_1,$		;$-3
  762   0284   D5 35 F7        		djnz	dcount_2,$-3-3
  763   0287   22              		ret
  764                          	;-----------------------------------------------
  765                          	;----------------------------------------------- 
  766   0288                   	wait_1sec:
  767   0288   75 36 07        		mov	dcount_3,#07d
  768   028B   75 35 FF        	l2:	mov 	dcount_2,#0ffh
  769   028E   75 34 FF        	l1:	mov 	dcount_1,#0ffh
  770   0291   D5 34 FD        		djnz 	dcount_1,$
  771   0294   D5 35 F7        		djnz 	dcount_2,l1
  772   0297   D5 36 F1        		djnz 	dcount_3,l2
  773   029A   22              		ret
  774                          	;-----------------------------------------------
  775                          	;--------------------------------------------------------------------
  776                          	;SW util/delay.asm
  777                          	
  778   029B                   		include	c:\lcdDec\util\test.asm
  779                          	;SW util/test.asm
  780                          	;--------------------------------------------------------------------
  781                          	;test_display
  782                          	;--------------------------------------------------------------------
  783                          	;-----------------------------------------------
  784   029B                   	test_display:
  785   029B   75 30 5C        		mov	ds1,#"Z"+2	;glow all segments
  786   029E   75 31 5C        		mov	ds2,#"Z"+2
  787   02A1   75 32 5C        		mov	ds3,#"Z"+2
  788   02A4   75 33 5C        		mov	ds4,#"Z"+2
  789                          	;
  790   02A7   51 88           		call	wait_1sec
  791                          	;
  Wed Dec  3 2008 14:33                                                                                                  Page   15




  792   02A9   75 30 5B        		mov	ds1,#"Z"+1	;put off all segments
  793   02AC   75 31 5B        		mov	ds2,#"Z"+1
  794   02AF   75 32 5B        		mov	ds3,#"Z"+1
  795   02B2   75 33 5B        		mov	ds4,#"Z"+1
  796                          	;
  797   02B5   51 88           		call	wait_1sec
  798                          	;
  799   02B7   22              		ret
  800                          	;-----------------------------------------------
  801                          	;----------------------------------------------
  802   02B8                   	buzzer:
  803   02B8   30 06 02        		jnb	start_buzzer,out_b
  804   02BB                   		
  805   02BB   B2 95           		cpl	p1.5
  806   02BD                   		
  807   02BD                   	out_b:
  808   02BD   22              		ret	
  809                          	;--------------------------------------------------------------------
  810                          	;SW util/test.asm
  811                          	
  812   02BE                   		include	c:\lcdDec\keys\appl_kp.asm
  813                          	;SW appl_kp.asm
  814                          	;--------------------------------------------------------------------
  815                          	;process_a
  816                          	;process_b
  817                          	;process_c
  818                          	;process_d
  819                          	;--------------------------------------------------------------------
  820                          	;-------------------------------------------------
  821                          	
  822   02BE                   	process_a:
  823   02BE   30 05 0E        		jnb	first_time,l1_pa
  824   02C1   C2 05           		clr	first_time
  825   02C3   75 30 30        		mov	ds1,#"0"
  826   02C6   75 31 30        		mov	ds2,#"0"
  827   02C9   75 32 30        		mov	ds3,#"0"
  828   02CC   75 33 30        		mov	ds4,#"0"
  829   02CF                   	l1_pa:
  830   02CF   D2 03           		setb	start_sw
  831   02D1   C2 08           		clr	stop_sw
  832   02D3   12 03 F5        		call	disp_sw_started
  833   02D6   22              		ret
  834                          	;-------------------------------------------------
  835                          	;-------------------------------------------------
  836   02D7                   	process_b:
  837   02D7   C2 03           		clr	start_sw
  838   02D9   C2 08           		clr	stop_sw
  839   02DB   12 04 2D        		call	disp_sw_stopped
  840   02DE   22              		ret
  841                          	;-------------------------------------------------
  842                          	;-------------------------------------------------
  843   02DF                   	process_c:
  844   02DF   C2 03           		clr	start_sw
  845   02E1   C2 08           		clr	stop_sw
  846                          	
  847   02E3   75 30 30        		mov	ds1,#"0"		;reset count to 0000
  848   02E6   75 31 30        		mov	ds2,#"0"
  Wed Dec  3 2008 14:33                                                                                                  Page   16




  849   02E9   75 32 30        		mov	ds3,#"0"
  850   02EC   75 33 30        		mov	ds4,#"0"
  851                          	;
  852   02EF   12 04 65        		call	disp_sw_resetted
  853   02F2   22              		ret
  854                          	;-------------------------------------------------
  855   02F3                   	process_d:
  856   02F3                   		
  857   02F3   D2 08           	       	setb   	stop_sw
  858   02F5   C2 03           		clr	start_sw
  859   02F7   12 04 9D        		call    	disp_sw_decremented
  860   02FA   22              		ret
  861                          	
  862                          	
  863                          	
  864                          	;--------------------------------------------------------------------
  865                          	;SW appl_kp.asm
  866                          	
  867   02FB                   		include	c:\lcdDec\keys\appl.asm
  868                          	;SW keys/appl.asm
  869                          	;--------------------------------------------------------------------
  870                          	;inc_d
  871                          	;dec_d
  872                          	;----------------------------------------------------------
  873                          	;-----------------------------------------------
  874   02FB   30 03 3E        	inc_d:  	jnb     	start_sw,out1_id
  875   02FE   05 30           		inc 	ds1
  876   0300   E5 30           		mov 	a,ds1
  877   0302   B4 3A 00        		cjne 	a,#"9"+1,$+3
  878   0305   50 01           		jnc 	l1_id 
  879   0307   22              		ret
  880                          	;
  881   0308   75 30 30        	l1_id:	mov 	ds1,#"0"
  882   030B   05 31           		inc 	ds2
  883   030D   E5 31           		mov 	a,ds2
  884   030F   B4 3A 00        		cjne 	a,#"9"+1,$+3
  885   0312   50 01           		jnc 	l2_id
  886   0314   22              		ret
  887                          	;
  888   0315   75 31 30        	l2_id:	mov 	ds2,#"0"
  889   0318   05 32           		inc 	ds3
  890   031A   E5 32           		mov 	a,ds3
  891   031C   B4 3A 00        		cjne 	a,#"9"+1,$+3 
  892   031F   50 01           		jnc 	l3_id
  893   0321   22              		ret
  894                          	;
  895   0322   75 32 30        	l3_id:	mov 	ds3,#"0"
  896   0325   05 33           		inc 	ds4 
  897   0327   E5 33           		mov 	a,ds4
  898   0329   B4 3A 10        		cjne 	a,#"9"+1,out1_id
  899   032C   50 01           	        	jnc 	l4_id
  900   032E   22              	       	 ret
  901                          	;  
  902                          	
  903   032F   75 30 30        	l4_id:	mov	ds1,#"0"
  904   0332   75 31 30        		mov	ds2,#"0"
  905   0335   75 32 30        		mov	ds3,#"0"
  Wed Dec  3 2008 14:33                                                                                                  Page   17




  906   0338   75 33 30        		mov	ds4,#"0"
  907   033B   22              	        	ret
  908                          	;
  909                          	
  910   033C                   	out1_id:
  911   033C   22              		ret
  912                          	;-------------------------------------------------
  913   033D   30 08 3C        	dec_d: 	jnb	stop_sw,out2_id 
  914   0340   15 30           		dec 	ds1
  915   0342   E5 30           		mov 	a,ds1
  916   0344   B4 30 00        		cjne 	a,#"0",$+3
  917   0347   40 01           		jc 	l5_id 
  918   0349   22              		ret
  919                          	;
  920   034A   75 30 39        	l5_id:	mov 	ds1,#"9"
  921   034D   15 31           		dec 	ds2
  922   034F   E5 31           		mov 	a,ds2
  923   0351   B4 30 00        		cjne 	a,#"0",$+3
  924   0354   40 01           		jc 	l6_id
  925   0356   22              		ret
  926                          	;
  927   0357   75 31 39        	l6_id:	mov 	ds2,#"9"
  928   035A   15 32           		dec 	ds3
  929   035C   E5 32           		mov 	a,ds3
  930   035E   B4 30 00        		cjne 	a,#"0",$+3 
  931   0361   40 01           		jc 	l7_id
  932   0363   22              		ret
  933                          	;
  934   0364   75 32 39        	l7_id:	mov 	ds3,#"9"
  935   0367   15 33           		dec	ds4 
  936   0369   E5 33           		mov 	a,ds4
  937   036B   B4 30 00        		cjne 	a,#"0",$+3
  938   036E   50 0C           	        	jnc 	out2_id
  939   0370                   	       	 
  940                          	;  
  941   0370   75 30 39        		mov	ds1,#"9"
  942   0373   75 31 39        		mov	ds2,#"9"
  943   0376   75 32 39        		mov	ds3,#"9"
  944   0379   75 33 39        		mov	ds4,#"9"
  945   037C                   	       	
  946                          	;
  947   037C                   	out2_id:
  948   037C   22              		ret
  949                          	;-------------------------------------------------
  950                          	
  951                          	
  952                          	
  953                          	;--------------------------------------------------------------------
  954                          	;SW keys/appl.asm
  955                          	
  956                          	
  957                          	;
  958   037D                   		include	c:\lcdDec\keys\key.asm
  959                          	;SW keys/key.asm
  960                          	;--------------------------------------------------------------------
  961                          	;keyprocess
  962                          	;key_release
  Wed Dec  3 2008 14:33                                                                                                  Page   18




  963                          	;get_key
  964                          	;get_key_status
  965                          	;--------------------------------------------------------------------
  966                          	;-------------------------------------------------
  967                          	
  968                          	
  969   037D                   	keyprocess:
  970   037D   E5 3B           		mov	a,key_code
  971                          	;
  972   037F   B4 41 05        		cjne	a,#"A",chk_b
  973                          	
  974   0382   51 BE           		call	process_a
  975   0384   02 03 9F        		jmp	out_kp
  976                          	;---------------------------
  977   0387   B4 42 05        	chk_b:	cjne	a,#"B",chk_c
  978                          	
  979   038A   51 D7           		call	process_b
  980   038C   02 03 9F        		jmp	out_kp
  981                          	;---------------------------
  982   038F   B4 43 05        	chk_c:	cjne	a,#"C",chk_d
  983                          	
  984   0392   51 DF           		call	process_c
  985   0394   02 03 9F        		jmp	out_kp
  986                          	;---------------------------
  987   0397   B4 44 05        	chk_d:	cjne	a,#"D",out_kp
  988                          	
  989   039A   51 F3           		call	process_d
  990   039C   02 03 9F        		jmp	out_kp
  991                          	;-----------------------------
  992   039F                   	out_kp:
  993   039F   12 03 A3        		call	key_release
  994   03A2   22              		ret
  995                          	;-------------------------------------------------
  996                          	;---------------------------------------------------------------------
  997   03A3                   	key_release:
  998          [01]            		IF	HEX_KEYPAD
  999   03A3   30 01 FD        		jnb	nkp,$	;wait for no key press flag
 1000   03A6   C2 00           		clr	key_ready
 1001   03A8   C2 01           		clr	nkp
 1002   03AA   22              		ret
 1003          [00]            		ENDIF
 1004                          	;-------------------------------------------------
 1005          [01]            		IF	PC_KEYBOARD
 1006                          		ret
 1007          [00]            		ENDIF
 1008                          	;-------------------------------------------------	
 1009                          	;---------------------------------------------------------------------
 1010                          	;gets ascii code for key pressed in "a" and key_code.
 1011   03AB                   	get_key:
 1012          [01]            		IF	HEX_KEYPAD
 1013   03AB   30 00 FD        		jnb	key_ready,$
 1014   03AE   E5 3B           		mov	a,key_code
 1015   03B0   90 03 B7        		mov	dptr,#ascii_key
 1016   03B3   93              		movc	a,@a+dptr
 1017   03B4   F5 3B           		mov	key_code,a
 1018   03B6   22              		ret
 1019                          	;------------------------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page   19




 1020   03B7   30 31 32 33 34  	ascii_key:	db	"0123456789ABCDEF"
        03BC   35 36 37 38 39 
        03C1   41 42 43 44 45 
        03C6   46 
 1021          [00]            		ENDIF
 1022                          	;-------------------------------------------------
 1023          [01]            		IF	PC_KEYBOARD
 1024                          		call	rx
 1025                          		mov	key_code,a
 1026                          		ret
 1027          [00]            		ENDIF
 1028                          	;---------------------------------------------------------------------	
 1029                          	;---------------------------------------------------------------------
 1030                          	;gets ascii code for key pressed in "a" and key_code.
 1031   03C7                   	get_key_status:
 1032          [01]            		IF	HEX_KEYPAD	
 1033   03C7   A2 00           		mov	c,key_ready
 1034   03C9   22              		ret
 1035          [00]            		ENDIF
 1036                          	;-------------------------------------------------
 1037          [01]            		IF	PC_KEYBOARD
 1038                          		mov	c,ri
 1039                          		ret
 1040          [00]            		ENDIF
 1041                          	;-------------------------------------------------
 1042                          	;---------------------------------------------------------------------
 1043                          	
 1044                          	
 1045                          	
 1046                          	
 1047                          	;--------------------------------------------------------------------
 1048                          	;SW keys/key.asm
 1049                          	
 1050   03CA                   		include	c:\lcdDec\disp\disp.asm
 1051                          	;SW sw/disp/disp.asm
 1052                          	;--------------------------------------------------------------------
 1053                          	;disp_sw
 1054                          	;disp_sw_started
 1055                          	;disp_sw_stopped
 1056                          	;disp_sw_resetted
 1057                          	;disp_count
 1058                          	;disp_sw_decremented
 1059                          	;--------------------------------------------------------------------
 1060                          	;--------------------------------------------------------------------
 1061                          	
 1062                          	
 1063   03CA                   	disp_sw:
 1064          [01]            		IF	SSD
 1065                          		mov	ds1,#"Z"+1
 1066                          		mov	ds2,#"Z"+1
 1067                          		mov	ds3,#"W"
 1068                          		mov	ds4,#"S"
 1069                          		ret
 1070          [00]            		ENDIF
 1071                          	;----------------------------------------------
 1072          [01]            		IF	LCD
 1073   03CA   12 05 38        		call 	clear_display
  Wed Dec  3 2008 14:33                                                                                                  Page   20




 1074   03CD   90 03 D4        		mov	dptr,#m_sw
 1075   03D0   12 05 B0        		call	wr_lcd_message16
 1076   03D3   22              		ret
 1077                          	;		-1234567890123456-
 1078   03D4   20 57 45 4C 43  	m_sw:	db	" WELCOME TO THE "
        03D9   4F 4D 45 20 54 
        03DE   4F 20 54 48 45 
        03E3   20 
 1079   03E4   20 53 54 4F 50  		db	" STOP WATCH PROG",#03h
        03E9   20 57 41 54 43 
        03EE   48 20 50 52 4F 
        03F3   47 03 
 1080          [00]            		ENDIF
 1081                          	;----------------------------------------------
 1082          [01]            		IF	TERMINAL
 1083                          		mov	dptr,#m_sw
 1084                          		call	send_m
 1085                          		ret
 1086                          	
 1087                          	m_sw:
 1088                          	;		-0        1         2         3         4	
 1089                          	;		-1234567890123456789012345678901234567890-
 1090                          		db	"WELCOME TO THE STOPWATCH PROGRAM",#0Ah,#0Dh
 1091                          		db	"Press A key to start the Stopwatch",#0Ah,#0Dh
 1092                          		db	"Press B key to stop  the Stopwatch",#0Ah,#0Dh
 1093                          		db	"Press C key to reset the Stopwatch",#0Ah,#0Dh,#03h
 1094          [00]            		ENDIF
 1095                          	;----------------------------------------------
 1096                          	;--------------------------------------------------------------------
 1097                          	;--------------------------------------------------------------------
 1098   03F5                   	disp_sw_started:
 1099          [01]            		IF	SSD
 1100                          		ret
 1101          [00]            		ENDIF
 1102                          	;----------------------------------------------
 1103          [01]            		IF	LCD
 1104   03F5   12 05 38        		call 	clear_display
 1105   03F8   90 04 13        		mov	dptr,#m_swstrt
 1106   03FB   12 05 B0        		call	wr_lcd_message16
 1107   03FE   E5 33           		mov	a,ds4
 1108   0400   12 05 60        		call	wr_lcd_dw
 1109   0403   E5 32           		mov	a,ds3
 1110   0405   12 05 60        		call	wr_lcd_dw
 1111   0408   E5 31           		mov	a,ds2
 1112   040A   12 05 60        		call	wr_lcd_dw
 1113   040D   E5 30           		mov	a,ds1
 1114   040F   12 05 60        		call	wr_lcd_dw
 1115                          	;
 1116   0412   22              		ret
 1117                          	
 1118   0413                   	m_swstrt:
 1119                          	;		-1234567890123456-
 1120   0413   20 20 20 20 53  		db	"    STOPWATCH   "
        0418   54 4F 50 57 41 
        041D   54 43 48 20 20 
        0422   20 
 1121   0423   20 53 54 41 52  		db	" STARTED ",#03h
  Wed Dec  3 2008 14:33                                                                                                  Page   21




        0428   54 45 44 20 03 
 1122          [00]            		ENDIF
 1123                          	;----------------------------------------------
 1124          [01]            		IF	TERMINAL
 1125                          		mov	a,#0Dh
 1126                          		call	tx
 1127                          		mov	dptr,#m_swstrt
 1128                          		call	send_m
 1129                          		ret
 1130                          	
 1131                          	m_swstrt:
 1132                          	;		-0        1         2         3         4	
 1133                          	;		-1234567890123456789012345678901234567890-
 1134                          		db	"STOPWATCH STARTED",#03h
 1135          [00]            		ENDIF
 1136                          	;----------------------------------------------
 1137                          	;--------------------------------------------------------------------
 1138                          	
 1139   042D                   	disp_sw_stopped:
 1140          [01]            		IF	SSD
 1141                          		ret
 1142          [00]            		ENDIF
 1143                          	;----------------------------------------------
 1144          [01]            		IF	LCD
 1145   042D   12 05 38        		call 	clear_display
 1146   0430   90 04 4B        		mov	dptr,#m_swstp
 1147   0433   12 05 B0        		call	wr_lcd_message16
 1148   0436   E5 33           		mov	a,ds4
 1149   0438   12 05 60        		call	wr_lcd_dw
 1150   043B   E5 32           		mov	a,ds3
 1151   043D   12 05 60        		call	wr_lcd_dw
 1152   0440   E5 31           		mov	a,ds2
 1153   0442   12 05 60        		call	wr_lcd_dw
 1154   0445   E5 30           		mov	a,ds1
 1155   0447   12 05 60        		call	wr_lcd_dw
 1156                          	;
 1157   044A   22              		ret
 1158                          	;----------------------------------------------------------
 1159   044B                   	m_swstp:
 1160                          	;		-1234567890123456-
 1161   044B   20 20 20 20 53  		db	"    STOPWATCH   "
        0450   54 4F 50 57 41 
        0455   54 43 48 20 20 
        045A   20 
 1162   045B   20 53 54 4F 50  		db	" STOPPED ",#03h
        0460   50 45 44 20 03 
 1163          [00]            		ENDIF
 1164                          	;----------------------------------------------
 1165                          	;----------------------------------------------
 1166          [01]            		IF	TERMINAL
 1167                          		mov	a,#0Dh
 1168                          		call	tx
 1169                          		mov	dptr,#m_swstp
 1170                          		call	send_m
 1171                          		ret
 1172                          	
 1173                          	m_swstp:
  Wed Dec  3 2008 14:33                                                                                                  Page   22




 1174                          	;		-0        1         2         3         4	
 1175                          	;		-1234567890123456789012345678901234567890-
 1176                          		db	"STOPWATCH STOPPED-->  ",#03h
 1177          [00]            		ENDIF
 1178                          	;----------------------------------------------
 1179                          	;-------------------------------------------------------------------
 1180                          	;--------------------------------------------------------------------
 1181                          	
 1182   0465                   	disp_sw_resetted:
 1183                          	;----------------------------------------------
 1184          [01]            		IF	SSD
 1185                          		ret
 1186          [00]            		ENDIF
 1187                          	;----------------------------------------------
 1188                          	;----------------------------------------------
 1189          [01]            		IF	LCD
 1190   0465   12 05 38        		call 	clear_display
 1191   0468   90 04 83        		mov	dptr,#m_swrst
 1192   046B   12 05 B0        		call	wr_lcd_message16
 1193                          	;
 1194   046E   E5 33           		mov	a,ds4
 1195   0470   12 05 60        		call	wr_lcd_dw
 1196                          	;
 1197                          	;
 1198   0473   E5 32           		mov	a,ds3
 1199   0475   12 05 60        		call	wr_lcd_dw
 1200                          	;
 1201                          	;
 1202   0478   E5 31           		mov	a,ds2
 1203   047A   12 05 60        		call	wr_lcd_dw
 1204                          	;
 1205                          	;
 1206   047D   E5 30           		mov	a,ds1
 1207   047F   12 05 60        		call	wr_lcd_dw
 1208                          	;
 1209   0482   22              		ret
 1210                          	
 1211   0483                   	m_swrst:
 1212                          	;		-1234567890123456-
 1213   0483   20 20 20 20 53  		db	"    STOPWATCH   "
        0488   54 4F 50 57 41 
        048D   54 43 48 20 20 
        0492   20 
 1214   0493   52 45 53 45 54  		db	"RESETTED ",#03h
        0498   54 45 44 20 03 
 1215          [00]            		ENDIF
 1216                          	;----------------------------------------------
 1217                          	;----------------------------------------------
 1218          [01]            		IF	TERMINAL
 1219                          		mov	a,#0Dh
 1220                          		call	tx
 1221                          		mov	dptr,#m_swrst
 1222                          		call	send_m
 1223                          		ret
 1224                          	
 1225                          	m_swrst:
 1226                          	;		-0        1         2         3         4	
  Wed Dec  3 2008 14:33                                                                                                  Page   23




 1227                          	;		-1234567890123456789012345678901234567890-
 1228                          		db	"STOPWATCH RESETTED--> ",#03h
 1229          [00]            		ENDIF
 1230                          	;----------------------------------------------
 1231                          	;-------------------------------------------------------------------
 1232   049D                   	disp_sw_decremented:
 1233                          	;----------------------------------------------
 1234          [01]            		IF	SSD
 1235                          		ret
 1236          [00]            		ENDIF
 1237                          	;----------------------------------------------
 1238          [01]            		IF	LCD
 1239   049D   12 05 38        		call 	clear_display
 1240   04A0   90 04 BB        		mov	dptr,#m_swdec
 1241   04A3   12 05 B0        		call	wr_lcd_message16
 1242   04A6   E5 33           		mov	a,ds4
 1243   04A8   12 05 60        		call	wr_lcd_dw
 1244   04AB   E5 32           		mov	a,ds3
 1245   04AD   12 05 60        		call	wr_lcd_dw
 1246   04B0   E5 31           		mov	a,ds2
 1247   04B2   12 05 60        		call	wr_lcd_dw
 1248   04B5   E5 30           		mov	a,ds1
 1249   04B7   12 05 60        		call	wr_lcd_dw
 1250                          	;
 1251   04BA   22              		ret
 1252                          	
 1253   04BB                   	m_swdec:
 1254                          	;		-1234567890123456-
 1255   04BB   20 53 54 4F 50  		db	" STOPWATCH      "
        04C0   57 41 54 43 48 
        04C5   20 20 20 20 20 
        04CA   20 
 1256   04CB   20 44 4F 57 4E  		db	" DOWN_C  ",#03h
        04D0   5F 43 20 20 03 
 1257          [00]            		ENDIF
 1258                          	;----------------------------------------------
 1259                          	;----------------------------------------------
 1260          [01]            		IF	TERMINAL
 1261                          		mov	a,#0Dh
 1262                          		call	tx
 1263                          		mov	dptr,#m_swstp
 1264                          		call	send_m
 1265                          		ret
 1266                          	
 1267                          	m_swstp:
 1268                          	;		-0        1         2         3         4	
 1269                          	;		-1234567890123456789012345678901234567890-
 1270                          		db	"STOPWATCH STOPPED-->  ",#03h
 1271          [00]            		ENDIF
 1272                          	
 1273                          	
 1274                          	
 1275                          	;--------------------------------------------------------------------
 1276   04D5                   	disp_count:
 1277                          	;----------------------------------------------
 1278          [01]            		IF	SSD
 1279                          		ret
  Wed Dec  3 2008 14:33                                                                                                  Page   24




 1280          [00]            		ENDIF
 1281                          	;----------------------------------------------
 1282                          	;----------------------------------------------
 1283          [01]            		IF	LCD
 1284   04D5   74 C9           		mov	a,#c0h+9d
 1285   04D7   12 05 47        		call	mov_lcd_cursor
 1286                          	;
 1287   04DA   E5 33           		mov	a,ds4
 1288   04DC   12 05 60        		call	wr_lcd_dw
 1289                          	;
 1290                          	;
 1291   04DF   E5 32           		mov	a,ds3
 1292   04E1   12 05 60        		call	wr_lcd_dw
 1293                          	;
 1294                          	;
 1295   04E4   E5 31           		mov	a,ds2
 1296   04E6   12 05 60        		call	wr_lcd_dw
 1297                          	;
 1298                          	;
 1299   04E9   E5 30           		mov	a,ds1
 1300   04EB   12 05 60        		call	wr_lcd_dw
 1301                          	;
 1302   04EE   51 88           		call	wait_1sec
 1303   04F0   22              		ret
 1304          [00]            		ENDIF
 1305                          	;----------------------------------------------
 1306                          	;----------------------------------------------
 1307          [01]            		IF	TERMINAL	
 1308                          	;
 1309                          		mov	a,ds4
 1310                          		call	tx
 1311                          	;
 1312                          		mov	a,ds3
 1313                          		call	tx
 1314                          	;
 1315                          		mov	a,ds2
 1316                          		call	tx
 1317                          	;
 1318                          		mov	a,ds1
 1319                          		call	tx
 1320                          	;
 1321                          	;Escape sequence (VT100) for moving cursor back 4 positions..( ESC[4D )
 1322                          		mov	a,#1bh		;ESC
 1323                          		call	tx
 1324                          	;
 1325                          		mov	a,#"["
 1326                          		call	tx
 1327                          	;
 1328                          		mov	a,#"4"
 1329                          		call	tx
 1330                          	;
 1331                          		mov	a,#"D"
 1332                          		call	tx
 1333                          	;
 1334                          		ret
 1335          [00]            		ENDIF
 1336                          	;----------------------------------------------
  Wed Dec  3 2008 14:33                                                                                                  Page   25




 1337                          	;-------------------------------------------------------------------
 1338                          	
 1339                          	
 1340                          	
 1341                          	
 1342                          	
 1343                          	
 1344                          	;------------------------------------------------------------------
 1345                          	;SW sw\disp\disp.asm
 1346                          	
 1347                          	;
 1348          [01]            		IF	LCD
 1349   04F1                   		include	c:\lcdDec\lcd\lcd.asm
 1350                          	;SW lcd.asm
 1351                          	;--------------------------------------------------------------------
 1352                          	;lcd_init	
 1353                          	;wr_lcd_cw0
 1354                          	;clear_display	
 1355                          	;wr_lcd_cw	
 1356                          	;wr_lcd_dw
 1357                          	;wr_lcd_data
 1358                          	;busy?	
 1359                          	;mov_lcd_cursor	
 1360                          	;clear_display
 1361                          	;toggle_e
 1362                          	;wr_lcd_hex	
 1363                          	;-------------------------------------------------------------------------
 1364                          	;-------------------------------------------------------------------------
 1365                          	
 1366   04F1                   	lcd_init:
 1367   04F1   51 6E           		call	wait_5ms
 1368   04F3   51 6E           		call	wait_5ms
 1369   04F5   51 6E           		call	wait_5ms
 1370                          	;
 1371   04F7   74 30           		mov	a,#30h	; port P07..P04 connected to d7_d4
 1372   04F9   12 05 2D        		call	wr_lcd_cw0		
 1373                          	;-------------------------------------------------------------------------
 1374   04FC   51 6E           		call	wait_5ms		;4.1ms
 1375   04FE   74 30           		mov	a,#30h			;
 1376   0500   12 05 2D        		call	wr_lcd_cw0
 1377                          	;-------------------------------------------------------------------------
 1378   0503   51 6E           		call	wait_5ms		;call	wait_100us
 1379   0505   74 30           		mov	a,#30h			;
 1380   0507   12 05 2D        		call	wr_lcd_cw0
 1381                          	;----------------------------------------------------------------------
 1382   050A   51 6E           		call	wait_5ms		;call	wait_100us
 1383   050C   74 20           		mov	a,#20h			;
 1384   050E   12 05 2D        		call	wr_lcd_cw0
 1385                          	;----------------------------------------------------------------------
 1386   0511                   	lcd_init1:
 1387                          			;function set init
 1388                          			;rs=0, r/w=0, code= 0010 n f * * (8-bits)
 1389                          			;n= 0 	1-line disp	f= 0  5x7 font
 1390                          			; = 1 	2-line disp	 = 1  5x10 font
 1391                          			;00101000b	;1-line, 5x7 font	;
 1392                          	
 1393                          	;
  Wed Dec  3 2008 14:33                                                                                                  Page   26




 1394   0511   74 28           		mov	a,#00101000b	;
 1395   0513   12 05 47        		call	wr_lcd_cw
 1396                          	;-------------------------------------------------------------------------
 1397                          			;cursor/disp shift(3rd command)	
 1398                          			;rs=0, r/w=0, code= 0001 s/c r/l * *
 1399                          			;s/c r/l= 00 cursor shifts left ie.-- add_counter
 1400                          			;01 right ie.  ++ add_counter 		
 1401                          			;10 display shifts left ie.cursor follows the display
 1402                          			;11 right;00010100b	;cursor shifts right
 1403                          	;
 1404   0516   74 14           		mov	a,#00010100b	;
 1405   0518   12 05 47        		call	wr_lcd_cw
 1406                          	;-------------------------------------------------------------------------
 1407                          			;disp on/off control(2nd command)
 1408                          			;r/s=0, r/w=0, code= 0000 1 d c b
 1409                          			;d= 0 disp off,c= 0 cursor off,b= 0 blink off
 1410                          			;   1      on,	   1        on  ,   1       on
 1411                          			;00001111b	;00001100b
 1412                          			;disp,on,cursor & blink off.
 1413                          	;
 1414   051B   74 0E           		mov	a,#00001110b	;
 1415   051D   12 05 47        		call	wr_lcd_cw
 1416                          	;-------------------------------------------------------------------------
 1417                          			;entry mode set
 1418                          			;r/s=0, r/w=0, code= 000001 i/d s
 1419                          			;i/d= 0 --add_counter, disp code & cursor shifts left	
 1420                          			;   = 1 ++add_counter, right
 1421                          			;s= 0 disable disp shift
 1422                          			; = 1 shift disp right(i/d=0) or left(i/d=1)
 1423                          			;0000 0110b;displays code & cursor shifts right & 		;++add_counter
 1424                          	;
 1425   0520   74 06           		mov	a,#00000110b	;
 1426   0522   12 05 47        		call	wr_lcd_cw
 1427                          	;-------------------------------------------------------------------------
 1428                          			;clear display
 1429                          			;r/s=0, r/w=0, code= 0000 0001 
 1430                          			;sets add_counter=0
 1431                          			;space code= 20h in all ddram addresses
 1432                          			;sets i/d=1
 1433                          			;cursor at left end of display
 1434                          			;00000001b
 1435                          	;
 1436   0525   74 01           		mov	a,#00000001b	;
 1437   0527   12 05 47        		call	wr_lcd_cw
 1438                          	;
 1439                          	;-------------------------------------------------------------------------
 1440   052A   C2 80           		clr	p0.0		;backlight on
 1441                          	;-------------------------------------------------------------------------
 1442   052C   22              		ret
 1443                          	;-------------------------------------------------------------------------
 1444                          	
 1445                          	
 1446                          	
 1447                          	
 1448                          	;------------------------------------------------------
 1449                          	;write lcd control word. (control word in a) 
 1450                          	;without 5msec wait.
  Wed Dec  3 2008 14:33                                                                                                  Page   27




 1451   052D                   	wr_lcd_cw0:
 1452   052D   12 05 9F        		call	map
 1453   0530   C2 81           		clr	rs		;Control 
 1454   0532   C2 82           		clr	r/w		;write
 1455   0534   12 05 94        		call	toggle_e
 1456   0537   22              		ret	
 1457                          	;------------------------------------------------------
 1458                          	
 1459                          	;-----------------------------------------------------------
 1460                          	;clears display and moves cursor to start position.
 1461   0538                   	clear_display:
 1462   0538   C0 E0           		push	a
 1463   053A   12 05 7E        		call	busy	
 1464   053D   74 01           		mov	a,#00000001b
 1465   053F   12 05 47        		call	wr_lcd_cw
 1466   0542   51 6E           		call	wait_5ms
 1467   0544   D0 E0           		pop	a
 1468   0546   22              		ret
 1469                          	;------------------------------------------------------------
 1470                          	
 1471                          	
 1472                          	;------------------------------------------------------------
 1473                          	;set address in ddram		;address in a.(ie. 1xxxxxxxb)
 1474                          	;cursor moves to new address
 1475                          	
 1476   0547                   	mov_lcd_cursor:
 1477                          	
 1478                          	;write lcd control word. (control word in a)
 1479                          	
 1480   0547                   	wr_lcd_cw:
 1481   0547   C0 E0           		push	a
 1482   0549   12 05 7E        		call	busy		
 1483                          	;--------------------------------
 1484   054C   12 05 9F        		call	map
 1485                          	;--------------------------------
 1486   054F   C2 81           		clr	rs		;Control 
 1487   0551   C2 82           		clr	r/w		;write
 1488   0553   12 05 94        		call	toggle_e
 1489                          	;--------------------------
 1490   0556   C4              		swap	a
 1491   0557   12 05 9F        		call	map
 1492                          	;--------------------------------
 1493                          	;
 1494   055A   12 05 94        		call	toggle_e
 1495                          	;-------------------------------
 1496   055D   D0 E0           		pop	a
 1497   055F   22              		ret	
 1498                          	;------------------------------------------------------
 1499                          	
 1500                          	;------------------------------------------------------
 1501                          	;write lcd data word. (data word in a)
 1502   0560                   	wr_lcd_dw:
 1503                          	;--------------------------------
 1504   0560   C0 E0           		push	a
 1505   0562   12 05 7E        		call	busy				
 1506                          	;--------------------------------
 1507   0565   12 05 9F        		call	map
  Wed Dec  3 2008 14:33                                                                                                  Page   28




 1508                          	;--------------------------------
 1509   0568   D2 81           		setb	rs		;data
 1510   056A   C2 82           		clr	r/w		;write
 1511   056C   12 05 94        		call	toggle_e
 1512                          	;--------------------------------
 1513   056F   C4              		swap	a
 1514   0570   12 05 9F        		call	map
 1515                          	;--------------------------------
 1516   0573   12 05 94        		call	toggle_e
 1517                          	;--------------------------------
 1518   0576   D0 E0           		pop	a
 1519   0578   22              		ret	
 1520                          	;------------------------------------------------------
 1521                          	
 1522                          	
 1523                          	
 1524                          	;------------------------------------------------------
 1525                          	;converts 00..09 to display 0..9 (ascii) on lcd
 1526   0579                   	wr_lcd_data:
 1527   0579   24 30           		add	a,#30h
 1528   057B   B1 60           		call	wr_lcd_dw
 1529   057D   22              		ret
 1530                          	;------------------------------------------------------
 1531                          	
 1532                          	
 1533                          	
 1534                          	;------------------------------------------------------
 1535   057E                   	busy:
 1536                          	;read lcd status word.
 1537                          	;
 1538   057E   D2 87           		 setb	d7		;config (busy flag) as i/p
 1539   0580   C2 81           		clr	rs		;Status(Control) 
 1540   0582   D2 82           		setb	r/w		;read
 1541   0584   00              		nop
 1542   0585   D2 83           		setb	e
 1543   0587   00              		nop
 1544   0588   A2 87           		mov	c,d7		;copy busy flag to carry.
 1545   058A   00              		nop
 1546   058B   C2 83           		clr	e
 1547                          	;-------------------------------------------------------
 1548   058D   00              		nop
 1549   058E   12 05 94        		call	toggle_e
 1550   0591   40 EB           		jc	busy
 1551   0593   22              		ret	
 1552                          	;------------------------------------------------------
 1553                          	
 1554                          	;------------------------------------------------------
 1555   0594                   	toggle_e:
 1556   0594   00              		nop
 1557   0595   D2 83           		setb	e
 1558   0597   00              		nop
 1559   0598   00              		nop
 1560   0599   00              		nop
 1561   059A   00              		nop
 1562   059B   C2 83           		clr	e
 1563   059D   00              		nop
 1564                          	;	
  Wed Dec  3 2008 14:33                                                                                                  Page   29




 1565   059E   22              		ret
 1566                          	;------------------------------------------------------
 1567                          	
 1568                          	
 1569                          	;------------------------------------------------------
 1570                          	;maps value in a to lcd port.
 1571   059F                   	map:
 1572   059F   A2 E4           		mov	c,A4
 1573   05A1   92 84           		mov	d4,c
 1574                          	;
 1575   05A3   A2 E5           		mov	c,A5	
 1576   05A5   92 85           		mov	d5,c
 1577                          	;
 1578   05A7   A2 E6           		mov	c,A6	
 1579   05A9   92 86           		mov	d6,c
 1580                          	;
 1581   05AB   A2 E7           		mov	c,A7
 1582   05AD   92 87           		mov	d7,c
 1583                          	;
 1584   05AF   22              		ret	
 1585                          	;------------------------------------------------------
 1586                          	;------------------------------------------------------
 1587                          	;writes the message starting at the first location
 1588                          	;after 16 positions..it corrects the address for proper
 1589                          	;2 line 16 charc display.
 1590                          	;the string should be terminated by 03h.
 1591                          	
 1592   05B0                   	wr_lcd_message16:
 1593   05B0   75 3E 00        		mov	count16,#00h
 1594   05B3   C0 E0           		push	a
 1595   05B5                   	wlm_l1:
 1596   05B5   74 00           		mov	a,#00h
 1597   05B7   93              		movc	a,@a+dptr
 1598   05B8   B4 03 03        		cjne	a,#03h,wlm_l2
 1599   05BB   02 05 CE        		jmp	out_wlm
 1600   05BE                   	wlm_l2:
 1601   05BE   B1 60           		call	wr_lcd_dw	;write at the current cursor position.
 1602   05C0   A3              		inc	dptr
 1603                          	;
 1604   05C1   05 3E           		inc	count16		;init to 00h
 1605   05C3   E5 3E           		mov	a,count16
 1606   05C5   B4 10 ED        		cjne	a,#16d,wlm_l1
 1607                          	;
 1608   05C8   74 A8           		mov	a,#10101000b	;init new cursor position. 10101001b
 1609   05CA   B1 47           		call	mov_lcd_cursor	
 1610                          	;
 1611   05CC   A1 B5           		jmp	wlm_l1
 1612                          	;
 1613   05CE                   	out_wlm:
 1614   05CE   D0 E0           		pop	a
 1615   05D0   22              		ret
 1616                          	;------------------------------------------------------
 1617                          	
 1618                          	
 1619                          	
 1620                          	
 1621                          	
  Wed Dec  3 2008 14:33                                                                                                  Page   30




 1622                          	;-------------------------------------------------------------------------
 1623                          	;SW lcd.asm
 1624                          	
 1625          [00]            		ENDIF
 1626                          	;
 1627          [01]            		IF	TERMINAL
 1628                          		include	c:\lcdDec\uart\uart.asm
 1629          [01]            		ELSE
 1630   05D1                   			
 1631          [02]            		IF	PC_KEYBOARD
 1632                          		include	c:\lcdDec\uart\uart.asm
 1633          [01]            		ENDIF	
 1634   05D1                   	           
 1635                          	
 1636          [00]            	         ENDIF
 1637                          	;
 1638                          	;--------------------------------------------------------------------
 1639   05D1                   		end



           Lines Assembled :  1639             Assembly Errors :  0


